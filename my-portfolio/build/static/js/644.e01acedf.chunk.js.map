{"version":3,"file":"static/js/644.e01acedf.chunk.js","mappings":"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","sources":["components/HomeView/ServiceCategories.jsx","components/BlogView/BlogBanner.jsx","reducers/blogReducer.js","components/BlogView/BlogQuestion.jsx","components/BlogView/BlogTech.jsx","shared-components/UserDataComponent.jsx","components/BlogView/BlogComment.jsx","components/BlogView/BlogDesc.jsx","components/BlogView/BlogDetails.jsx","views/Blog.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport Services from \"../../shared-components/Services\";\r\n\r\nconst ServiceCategories = () => {\r\n  return (\r\n    <>\r\n      <Container className=\"t-color service-category\">\r\n        <Services displayType=\"block\" updateService={true} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceCategories;\r\n","import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nconst BlogBanner = () => {\r\n  return (\r\n    <>\r\n      <Container fluid className=\"m-0 p-0\">\r\n        <div className=\"blogbanner-image d-block d-md-flex align-items-center\">\r\n          <img src=\"/images/blog-banner.jpg\" alt=\"Blog\" />\r\n          <div className=\"t-color f-size-36 py-3 my-4 text-center flex-grow-1 px-3\">\r\n            Discover the best developer blogs on any tech\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogBanner;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n  ? process.env.REACT_APP_API_URL\r\n  : \"\";\r\n\r\nexport const getBlogList = createAsyncThunk(\"getBlogList\", async (body) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API_URL}/api/blog/blogList`,\r\n      body,\r\n      config\r\n    );\r\n    if (!data.error) {\r\n      return await data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n});\r\n\r\nexport const createBlogList = createAsyncThunk(\r\n  \"createBlogList\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${API_URL}/api/blog/AddBlogList`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateBlogList = createAsyncThunk(\r\n  \"updateBlogList\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${API_URL}/api/blog/updateBlogList`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteBlog = createAsyncThunk(\"deleteBlogList\", async (body) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API_URL}/api/blog/deleteBlog`,\r\n      body,\r\n      config\r\n    );\r\n    return await data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nexport const getBlogDescList = createAsyncThunk(\r\n  \"getBlogDescList\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${API_URL}/api/blog/blogDescList`,\r\n        body,\r\n        config\r\n      );\r\n      if (!data.error) {\r\n        return await data;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createBlogDesc = createAsyncThunk(\r\n  \"createBlogDescList\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${API_URL}/api/blog/addBlogDesc`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateBlogDesc = createAsyncThunk(\r\n  \"updateBlogDesc\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${API_URL}/api/blog/updateBlogDesc`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteBlogDesc = createAsyncThunk(\r\n  \"deleteBlogDesc\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${API_URL}/api/blog/deleteBlogDesc`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst blogReducer = createSlice({\r\n  name: \"blogReducer\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getBlogList.fulfilled]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blogError = action.payload.error;\r\n        state.blogSuccess = \"\";\r\n      } else {\r\n        state.blog = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [getBlogList.pending]: (state, action) => {\r\n      state.blogLoading = true;\r\n      state.blog = null;\r\n      state.blogSuccess = \"\";\r\n      state.blogError = \"\";\r\n    },\r\n    [getBlogList.rejected]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blog = null;\r\n        state.blogError = action.payload.error;\r\n      }\r\n    },\r\n    [createBlogList.fulfilled]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blogError = action.payload.error;\r\n        state.blogSuccess = \"\";\r\n      } else {\r\n        state.blog = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [createBlogList.pending]: (state, action) => {\r\n      state.blogLoading = true;\r\n      state.blog = null;\r\n      state.blogSuccess = \"\";\r\n      state.blogError = \"\";\r\n    },\r\n    [createBlogList.rejected]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blog = null;\r\n        state.blogError = action.payload.error;\r\n      }\r\n    },\r\n    [updateBlogList.fulfilled]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blogError = action.payload.error;\r\n        state.blogSuccess = \"\";\r\n      } else {\r\n        state.blog = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [updateBlogList.pending]: (state, action) => {\r\n      state.blogLoading = true;\r\n      state.blog = null;\r\n      state.blogSuccess = \"\";\r\n      state.blogError = \"\";\r\n    },\r\n    [updateBlogList.rejected]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blog = null;\r\n        state.blogError = action.payload.error;\r\n      }\r\n    },\r\n    [deleteBlog.fulfilled]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blogError = action.payload.error;\r\n        state.blogSuccess = \"\";\r\n      } else {\r\n        state.blog = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [deleteBlog.pending]: (state, action) => {\r\n      state.blogLoading = true;\r\n      state.blog = null;\r\n      state.blogSuccess = \"\";\r\n      state.blogError = \"\";\r\n    },\r\n    [deleteBlog.rejected]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blog = null;\r\n        state.blogError = action.payload.error;\r\n      }\r\n    },\r\n    [getBlogDescList.fulfilled]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blogError = action.payload.error;\r\n        state.blogSuccess = \"\";\r\n      } else {\r\n        state.blog = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [getBlogDescList.pending]: (state, action) => {\r\n      state.blogLoading = true;\r\n      state.blog = null;\r\n      state.blogSuccess = \"\";\r\n      state.blogError = \"\";\r\n    },\r\n    [getBlogDescList.rejected]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blog = null;\r\n        state.blogError = action.payload.error;\r\n      }\r\n    },\r\n    [createBlogDesc.fulfilled]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blogError = action.payload.error;\r\n        state.blogSuccess = \"\";\r\n      } else {\r\n        state.blog = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [createBlogDesc.pending]: (state, action) => {\r\n      state.blogLoading = true;\r\n      state.blog = null;\r\n      state.blogSuccess = \"\";\r\n      state.blogError = \"\";\r\n    },\r\n    [createBlogDesc.rejected]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blog = null;\r\n        state.blogError = action.payload.error;\r\n      }\r\n    },\r\n    [updateBlogDesc.fulfilled]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blogError = action.payload.error;\r\n        state.blogSuccess = \"\";\r\n      } else {\r\n        state.blog = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [updateBlogDesc.pending]: (state, action) => {\r\n      state.blogLoading = true;\r\n      state.blog = null;\r\n      state.blogSuccess = \"\";\r\n      state.blogError = \"\";\r\n    },\r\n    [updateBlogDesc.rejected]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blog = null;\r\n        state.blogError = action.payload.error;\r\n      }\r\n    },\r\n    [deleteBlogDesc.fulfilled]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blogError = action.payload.error;\r\n        state.blogSuccess = \"\";\r\n      } else {\r\n        state.blog = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [deleteBlogDesc.pending]: (state, action) => {\r\n      state.blogLoading = true;\r\n      state.blog = null;\r\n      state.blogSuccess = \"\";\r\n      state.blogError = \"\";\r\n    },\r\n    [deleteBlogDesc.rejected]: (state, action) => {\r\n      state.blogLoading = false;\r\n      if (action.payload.error) {\r\n        state.blog = null;\r\n        state.blogError = action.payload.error;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default blogReducer.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { deleteBlog, updateBlogList } from \"../../reducers/blogReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst BlogQuestion = (props) => {\r\n  const [editQuestion, setEditQuestion] = useState(false);\r\n  const [showAction, setShowAction] = useState(false);\r\n  const [question, setQuestion] = useState(props.question.blogQuestion);\r\n  const [blogActive, setBlogActive] = useState(props.question.active);\r\n  const blogId = props.question._id;\r\n  const [updatedQuestion, setUpdatedQuestion] = useState(question);\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const token = userdetails ? userdetails.token : \"\";\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const updateChanges = async (token, updatedQuestion, blogId, blogActive) => {\r\n    setQuestion(updatedQuestion);\r\n    await dispatch(\r\n      updateBlogList({ token, updatedQuestion, blogId, blogActive })\r\n    );\r\n\r\n    setEditQuestion(false);\r\n  };\r\n  const cancelUpdate = () => {\r\n    setEditQuestion(false);\r\n    setUpdatedQuestion(question);\r\n  };\r\n  const deleteHandler = async () => {\r\n    await dispatch(deleteBlog({ token, blogId }));\r\n    props.refreshBlogList();\r\n  };\r\n\r\n  const updateBlogActive = () => {\r\n    updateChanges(token, updatedQuestion, blogId, !blogActive);\r\n    setBlogActive(!blogActive);\r\n  };\r\n  return (\r\n    <>\r\n      <h5 className=\"d-flex justify-content-between fw-normal my-4 position-relative\">\r\n        {editQuestion ? (\r\n          <>\r\n            <span style={{ zIndex: \"99\" }} className=\"flex-grow-1 d-flex\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={question}\r\n                onChange={(e) => setUpdatedQuestion(e.target.value)}\r\n                className=\"flex-grow-1\"\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                onClick={(e) =>\r\n                  updateChanges(token, updatedQuestion, blogId, blogActive)\r\n                }\r\n                className=\"mt-1 cursor-pointer\"\r\n                style={{ padding: \"7px 7px\" }}\r\n              />\r\n            </span>\r\n            <div\r\n              style={{\r\n                position: \"fixed\",\r\n                zIndex: \"9\",\r\n                display: \"block\",\r\n                height: \"100vh\",\r\n                width: \"100vw\",\r\n                top: 0,\r\n                left: 0,\r\n              }}\r\n              onClick={() => cancelUpdate()}\r\n            ></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span\r\n              className=\"secondary-link flex-grow-1\"\r\n              onClick={(e) => navigate(`/blog/${blogId}`)}\r\n            >\r\n              {question}\r\n            </span>\r\n            {props.isCurrentUser && (\r\n              <>\r\n                <span\r\n                  className={`${\r\n                    !showAction\r\n                      ? \"d-none\"\r\n                      : \"d-flex position-absolute s-back p-3\"\r\n                  } position-md-relative t-color d-md-flex gap-1 ms-auto  f-size-12 align-items-center`}\r\n                  style={{ top: \"3px\", right: \"20px\", zIndex: 99 }}\r\n                >\r\n                  <span\r\n                    className=\"secondary-link\"\r\n                    onClick={(e) => updateBlogActive()}\r\n                  >\r\n                    {blogActive ? \"Active\" : \"Inactive\"}\r\n                  </span>\r\n                  <span>|</span>\r\n                  <span\r\n                    className=\"secondary-link\"\r\n                    onClick={(e) => setEditQuestion(true)}\r\n                  >\r\n                    Edit\r\n                  </span>\r\n                  <span>|</span>\r\n                  <span\r\n                    className=\"secondary-link\"\r\n                    onClick={(e) => deleteHandler()}\r\n                  >\r\n                    Del\r\n                  </span>\r\n                </span>\r\n                <span className=\"d-md-none\">\r\n                  <FontAwesomeIcon\r\n                    icon={faEllipsisV}\r\n                    onClick={(e) => setShowAction(!showAction)}\r\n                    className=\"mt-1 cursor-pointer\"\r\n                    style={{ padding: \"7px 7px\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </h5>\r\n      {showAction && (\r\n        <div\r\n          className=\"position-fixed top-0 start-0 bottom-0 end-0\"\r\n          style={{ zIndex: 9 }}\r\n          onClick={(e) => setShowAction(!showAction)}\r\n        ></div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogQuestion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"reactstrap\";\r\nimport { createBlogList, getBlogList } from \"../../reducers/blogReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport BlogQuestion from \"./BlogQuestion\";\r\nimport { getUesrId } from \"../../reducers/authReducer\";\r\nimport FormElementComponent from \"../../shared-components/FormElementComponent\";\r\n\r\nconst BlogTech = () => {\r\n  const dispatch = useDispatch();\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [uid, setUid] = useState(null);\r\n  const [addBlogModal, setAddBlogModal] = useState(false);\r\n  const formFieldTypes = [\r\n    \"blogQuestion-text-require\",\r\n    \"blogDesc-quill-optional\",\r\n  ];\r\n  const [blogListData, setBlogListData] = useState(null);\r\n  const formInputValues = {};\r\n\r\n  const getBlogs = async () => {\r\n    const data = await dispatch(getBlogList({ token: userdetails.token }));\r\n    if (data.payload && !data.payload.error) {\r\n      await setBlogListData(data.payload);\r\n    } else {\r\n      await setBlogListData(null);\r\n    }\r\n  };\r\n\r\n  const getId = async () => {\r\n    const data = await dispatch(getUesrId({ token: userdetails.token }));\r\n    setUid(data.payload);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBlogs();\r\n    getId();\r\n  }, [userdetails]);\r\n\r\n  const openModal = () => {\r\n    setAddBlogModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setAddBlogModal(false);\r\n  };\r\n\r\n  const setOpenAddBlogModal = () => {\r\n    getBlogs();\r\n    closeModal();\r\n  };\r\n\r\n  const refreshBlogList = () => {\r\n    getBlogs();\r\n  };\r\n\r\n  const createData = async (formData) => {\r\n    const data = await dispatch(\r\n      createBlogList({\r\n        ...formData,\r\n        token: userdetails.token,\r\n        id: formInputValues.id ? formInputValues.id : null,\r\n      })\r\n    );\r\n    if (data.payload) {\r\n      setAddBlogModal(false);\r\n      setOpenAddBlogModal();\r\n    }\r\n  };\r\n\r\n  const updateData = () => {};\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"blogTech\">\r\n        <div className=\"blogTech-container\">\r\n          {userdetails && userdetails.token && (\r\n            <Row>\r\n              <Col className=\"text-end px-4\">\r\n                <Button\r\n                  className=\"sp-btn-secondary rounded-0 px-5\"\r\n                  onClick={openModal}\r\n                >\r\n                  Create New Blog\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <div>\r\n            <span className=\"d-none d-md-block p-color f-size-20 pt-2\">\r\n              Blogs\r\n            </span>\r\n          </div>\r\n          <div className=\"flex-grow-1 p-md-4 t-back2\">\r\n            {blogListData &&\r\n              blogListData.map((item, i) => (\r\n                <blockquote className=\"blockquote mb-0 t-color\" key={item._id}>\r\n                  <BlogQuestion\r\n                    question={item}\r\n                    isCurrentUser={item.userId === uid}\r\n                    refreshBlogList={refreshBlogList}\r\n                  />\r\n                </blockquote>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        {addBlogModal && (\r\n          <>\r\n            {/* <CreateBlogComponentModal\r\n            formField={formFieldTypes}\r\n            formInputValues={formFieldValues}\r\n            setAddBlogModal={setOpenAddBlogModal}\r\n          /> */}\r\n            <FormElementComponent\r\n              formField={formFieldTypes}\r\n              formInputValues={formInputValues}\r\n              modalHeading={\r\n                formInputValues.id ? \"Update Blog\" : \"Create New Blog\"\r\n              }\r\n              buttons={[\r\n                {\r\n                  type: \"cancel\",\r\n                  title: \"Cancel\",\r\n                },\r\n                {\r\n                  type: formInputValues.id ? \"update\" : \"create\",\r\n                  title: formInputValues.id ? \"Update\" : \"Create\",\r\n                },\r\n              ]}\r\n              closeModal={closeModal}\r\n              createData={createData}\r\n              updateData={updateData}\r\n              formType=\"modal\"\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogTech;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUserData } from \"../reducers/authReducer\";\r\n\r\nconst UserDataComponent = (props) => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const getUserName = async (id) => {\r\n    const data = await dispatch(getUserData({ id }));\r\n    setUserInfo(data.payload);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserName(props.id);\r\n  }, [props]);\r\n\r\n  return <>{userInfo && <span>{userInfo.name}</span>}</>;\r\n};\r\n\r\nexport default UserDataComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createBlogDesc, updateBlogDesc } from \"../../reducers/blogReducer\";\r\nimport AnimatedElement from \"../../shared-components/AnimatedElement\";\r\nimport FormElementComponent from \"../../shared-components/FormElementComponent\";\r\n\r\nconst BlogComment = (props) => {\r\n  const blogId = props.blogId;\r\n  const [showEditor, setShowEditor] = useState(\r\n    props.blogDesc && props.blogDesc.blogDesc ? true : false\r\n  );\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const formField = [\"blogDesc-quill-optional\"];\r\n  const formInputValues = props.blogDesc ? props.blogDesc : {};\r\n\r\n  const dispatch = useDispatch();\r\n  const closeEditor = () => {\r\n    props.blogDesc && props.blogDesc.blogDesc\r\n      ? props.hideEditor()\r\n      : setShowEditor(false);\r\n  };\r\n\r\n  const createData = async (formData) => {\r\n    setShowEditor(false);\r\n    const data = await dispatch(\r\n      createBlogDesc({\r\n        token: userdetails.token,\r\n        blogDesc: formData.blogDesc,\r\n        blogId,\r\n      })\r\n    );\r\n\r\n    if (!data.error && data.payload !== undefined) {\r\n      props.addComment(); //data.payload\r\n    }\r\n  };\r\n\r\n  const updateData = async (formData) => {\r\n    setShowEditor(false);\r\n    const data = await dispatch(\r\n      updateBlogDesc({\r\n        token: userdetails.token,\r\n        blogDesc: formData.blogDesc,\r\n        blogId,\r\n        blogDescId: props.blogDesc._id,\r\n      })\r\n    );\r\n\r\n    if (!data.error && data.payload !== undefined) {\r\n      props.addComment(); //data.payload\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pb-3 text-end s-color\">\r\n      {!showEditor && (\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-100 s-back border-0 f-size-12 p-2 t-color-e5\"\r\n          placeholder=\"Enter Comment\"\r\n          onFocus={(e) => setShowEditor(true)}\r\n          readOnly\r\n        />\r\n      )}\r\n      {showEditor && (\r\n        <>\r\n          <AnimatedElement>\r\n            <FormElementComponent\r\n              formField={formField}\r\n              formInputValues={formInputValues}\r\n              modalHeading={\r\n                formInputValues._id ? \"Update Comment\" : \"Add Comment\"\r\n              }\r\n              buttons={[\r\n                {\r\n                  type: \"cancel\",\r\n                  title: \"Cancel\",\r\n                },\r\n                {\r\n                  type: formInputValues._id ? \"update\" : \"create\",\r\n                  title: formInputValues._id ? \"Update\" : \"Create\",\r\n                },\r\n              ]}\r\n              closeModal={closeEditor}\r\n              createData={createData}\r\n              updateData={updateData}\r\n              formType=\"modal\"\r\n            />\r\n          </AnimatedElement>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogComment;\r\n","import React, { useState } from \"react\";\r\nimport UserDataComponent from \"../../shared-components/UserDataComponent\";\r\nimport parse from \"html-react-parser\";\r\nimport BlogComment from \"./BlogComment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteBlogDesc } from \"../../reducers/blogReducer\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nconst BlogDesc = (props) => {\r\n  const [showEditor, setShowEditor] = useState(false);\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const hideEditor = () => {\r\n    setShowEditor(false);\r\n  };\r\n  const refreshBlogList = () => {\r\n    setShowEditor(false);\r\n    props.editComment();\r\n  };\r\n  const deleteBlogDescList = async () => {\r\n    await dispatch(\r\n      deleteBlogDesc({ token: userdetails.token, blogDescId: props.desc._id })\r\n    );\r\n    props.editComment();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"t-color f-size-15\">{parse(`${props.desc.blogDesc}`)}</div>\r\n      <footer className=\"blockquote-footer d-flex f-size-12 ps-4\">\r\n        <cite title=\"Source Title\">\r\n          <span>\r\n            {new Date(props.desc.updatedAt).toLocaleDateString(\"en-US\", {\r\n              day: \"numeric\",\r\n              month: \"long\",\r\n              year: \"numeric\",\r\n            })}\r\n          </span>{\" \"}\r\n          | <UserDataComponent id={props.desc.userId} />\r\n        </cite>\r\n        {props.isCurrentUser && (\r\n          <span className=\"f-size-12 ms-auto\">\r\n            <span\r\n              className=\"secondary-link\"\r\n              onClick={(e) => setShowEditor(true)}\r\n            >\r\n              Edit\r\n            </span>{\" \"}\r\n            |{\" \"}\r\n            <span\r\n              className=\"secondary-link\"\r\n              onClick={(e) => deleteBlogDescList()}\r\n            >\r\n              Del\r\n            </span>\r\n          </span>\r\n        )}\r\n      </footer>\r\n      {showEditor && (\r\n        <BlogComment\r\n          blogId={props.blogId}\r\n          blogDesc={props.desc}\r\n          index={props.index}\r\n          addComment={refreshBlogList}\r\n          hideEditor={hideEditor}\r\n        />\r\n      )}\r\n      <div className=\"border-line-light mb-2\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogDesc;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { getBlogDescList, getBlogList } from \"../../reducers/blogReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BlogDesc from \"./BlogDesc\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport BlogComment from \"./BlogComment\";\r\nimport { getUesrId } from \"../../reducers/authReducer\";\r\n\r\nconst BlogDetails = (props) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [uid, setUid] = useState(null);\r\n  const [blogListData, setBlogListData] = useState(null);\r\n  const [blogDescListData, setBlogDescListData] = useState(null);\r\n  const blogId = props.blogId;\r\n\r\n  const getBlogs = async () => {\r\n    const data = await dispatch(getBlogList({ blogId }));\r\n    if (data.payload && !data.payload.error) {\r\n      await setBlogListData(data.payload);\r\n    } else {\r\n      await setBlogListData(null);\r\n    }\r\n  };\r\n\r\n  const getBlogDesc = async () => {\r\n    const data = await dispatch(getBlogDescList({ blogId }));\r\n    if (data.payload && !data.payload.error) {\r\n      await setBlogDescListData(data.payload);\r\n    } else {\r\n      await setBlogDescListData(null);\r\n    }\r\n  };\r\n\r\n  const getId = async () => {\r\n    const data = await dispatch(getUesrId({ token: userdetails.token }));\r\n    setUid(data.payload);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBlogs();\r\n    getBlogDesc();\r\n    getId();\r\n  }, [userdetails]);\r\n\r\n  const refreshBlogList = () => {\r\n    getBlogDesc();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"blogTech\">\r\n        <div className=\"blogTech-container\">\r\n          <div>\r\n            <span\r\n              className=\"d-none d-md-block p-color f-size-20 pt-2 cursor-pointer\"\r\n              onClick={() => navigate(\"/blog\")}\r\n            >\r\n              &lt;&lt; Blogs\r\n            </span>\r\n          </div>\r\n          <div className=\"flex-grow-1 p-md-4 t-back2\">\r\n            {blogListData &&\r\n              blogListData.map((item, i) => (\r\n                <blockquote className=\"blockquote mb-0 t-color\" key={item._id}>\r\n                  <h4>{item.blogQuestion}</h4>\r\n                  {blogDescListData &&\r\n                    blogDescListData.map((data, i) => (\r\n                      <div key={data._id} className=\"ps-4\">\r\n                        <BlogDesc\r\n                          desc={data}\r\n                          index={i}\r\n                          isCurrentUser={data.userId === uid}\r\n                          editComment={refreshBlogList}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  <BlogComment\r\n                    blogId={item._id}\r\n                    index={i}\r\n                    blogDesc={null}\r\n                    addComment={refreshBlogList}\r\n                    hideEditor={null}\r\n                  />\r\n                </blockquote>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","import React from \"react\";\r\nimport Base from \"../Base\";\r\nimport BlogBanner from \"../components/BlogView/BlogBanner\";\r\nimport BlogTech from \"../components/BlogView/BlogTech\";\r\nimport ServiceCategories from \"../components/HomeView/ServiceCategories\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport BlogDetails from \"../components/BlogView/BlogDetails\";\r\n\r\nconst Blog = () => {\r\n  const { id } = useParams();\r\n  return (\r\n    <>\r\n      <Base>\r\n        <div className=\"container-fluid px-0\">\r\n          <BlogBanner />\r\n          {id ? <BlogDetails blogId={id} /> : <BlogTech />}\r\n          <ServiceCategories />\r\n        </div>\r\n      </Base>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n"],"names":["ServiceCategories","_jsx","_Fragment","children","Container","className","Services","displayType","updateService","BlogBanner","fluid","_jsxs","src","alt","API_URL","process","REACT_APP_API_URL","getBlogList","createAsyncThunk","async","config","headers","data","axios","post","concat","body","error","createBlogList","console","log","updateBlogList","deleteBlog","getBlogDescList","createBlogDesc","updateBlogDesc","deleteBlogDesc","createSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","blogLoading","payload","blogError","blogSuccess","blog","success","pending","rejected","props","editQuestion","setEditQuestion","useState","showAction","setShowAction","question","setQuestion","blogQuestion","blogActive","setBlogActive","active","blogId","_id","updatedQuestion","setUpdatedQuestion","userdetails","useSelector","user","token","dispatch","useDispatch","navigate","useNavigate","updateChanges","style","zIndex","type","defaultValue","onChange","e","target","value","FontAwesomeIcon","icon","faCheck","onClick","padding","position","display","height","width","top","left","isCurrentUser","right","refreshBlogList","deleteHandler","faEllipsisV","BlogTech","uid","setUid","addBlogModal","setAddBlogModal","blogListData","setBlogListData","formInputValues","getBlogs","useEffect","getUesrId","getId","closeModal","Row","Col","Button","openModal","map","item","i","BlogQuestion","userId","FormElementComponent","formField","modalHeading","id","buttons","title","createData","formData","updateData","formType","userInfo","setUserInfo","getUserData","getUserName","showEditor","setShowEditor","blogDesc","placeholder","onFocus","readOnly","AnimatedElement","closeEditor","hideEditor","undefined","addComment","blogDescId","parse","desc","Date","updatedAt","toLocaleDateString","day","month","year","UserDataComponent","editComment","deleteBlogDescList","BlogComment","index","blogDescListData","setBlogDescListData","getBlogDesc","BlogDesc","Blog","useParams","Base","BlogDetails"],"sourceRoot":""}