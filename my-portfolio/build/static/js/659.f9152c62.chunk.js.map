{"version":3,"file":"static/js/659.f9152c62.chunk.js","mappings":"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","sources":["reducers/employerReducer.js","reducers/projectReducer.js","reducers/skillReducer.js","shared-components/ProfileSkillsSection.jsx","shared-components/Skills.js","../node_modules/reactstrap/esm/AccordionContext.js","../node_modules/reactstrap/esm/Accordion.js","../node_modules/reactstrap/esm/AccordionItem.js","../node_modules/reactstrap/esm/AccordionHeader.js","../node_modules/reactstrap/esm/AccordionBody.js","utils/API_URl.js","shared-components/FileUploadManagement.jsx","components/ProfileView/EditHomeContent1.jsx","components/ProfileView/EditHomeContent2.jsx","components/ProfileView/EditHomeTopBanner.jsx","components/ProfileView/EditMiddleBanner.jsx","components/ProfileView/EditUserProfile.jsx","components/ProfileView/HomeContent1.jsx","components/ProfileView/HomeContent2.jsx","components/ProfileView/HomeTopBanner.jsx","components/ProfileView/MiddleBanner.jsx","components/ProfileView/UserProfile.jsx","components/ProfileView/ProfileService.jsx","components/ProfileView/ProfileSkills.jsx","shared-components/AddEmployerComponentModal.jsx","shared-components/ProfileEmployerSection.jsx","components/ProfileView/ProfileEmployer.jsx","shared-components/AddAcademyComponentModal.jsx","shared-components/ProfileAcademySection.jsx","components/ProfileView/ProfileAcademia.jsx","shared-components/AddProjectComponentModal.jsx","shared-components/ProfileProjectSection.jsx","components/ProfileView/ProfileProject.jsx","components/ProfileView/ShowDBPopUpComponent.jsx","views/Profile.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n  ? process.env.REACT_APP_API_URL\r\n  : \"\";\r\n\r\nexport const getEmployerData = createAsyncThunk(\r\n  \"getEmployerData\",\r\n  async (req, body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `${API_URL}/api/employer/details/${req.token}`,\r\n        body,\r\n        config\r\n      );\r\n      if (!data.error) {\r\n        return await data;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateEmployerReducer = createAsyncThunk(\r\n  \"updateEmployer\",\r\n  async (body) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API_URL}/api/employer/update/`,\r\n      body,\r\n      config\r\n    );\r\n    return await data;\r\n  }\r\n);\r\n\r\nexport const createEmployerReducer = createAsyncThunk(\r\n  \"createEmployer\",\r\n  async (body) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API_URL}/api/employer/create/`,\r\n      body,\r\n      config\r\n    );\r\n    return await data;\r\n  }\r\n);\r\n\r\nexport const deleteEmployerReducer = createAsyncThunk(\r\n  \"deleteEmployer\",\r\n  async (body) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API_URL}/api/employer/delete/`,\r\n      body,\r\n      config\r\n    );\r\n    return await data;\r\n  }\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst employerReducer = createSlice({\r\n  name: \"employerReducer\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getEmployerData.fulfilled]: (state, action) => {\r\n      state.employerLoading = false;\r\n      if (action.payload.error) {\r\n        state.employerError = action.payload.error;\r\n        state.employerSuccess = \"\";\r\n      } else {\r\n        state.employer = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [getEmployerData.pending]: (state, action) => {\r\n      state.employerLoading = true;\r\n      state.employer = null;\r\n      state.employerSuccess = \"\";\r\n      state.employerError = \"\";\r\n    },\r\n    [getEmployerData.rejected]: (state, action) => {\r\n      state.employerLoading = false;\r\n      if (action.payload.error) {\r\n        state.employer = null;\r\n        state.employerError = action.payload.error;\r\n      }\r\n    },\r\n    [updateEmployerReducer.fulfilled]: (state, action) => {\r\n      state.employerLoading = false;\r\n      if (action.payload.error) {\r\n        state.employerError = action.payload.error;\r\n        state.employerSuccess = \"\";\r\n      } else {\r\n        state.employer = action.payload;\r\n        state.employerSuccess = \"Employer data updated successful!!\";\r\n      }\r\n    },\r\n    [updateEmployerReducer.pending]: (state, action) => {\r\n      state.employerLoading = true;\r\n      state.employer = null;\r\n      state.employerSuccess = \"\";\r\n      state.employerError = \"\";\r\n    },\r\n    [updateEmployerReducer.rejected]: (state, action) => {\r\n      state.employerLoading = false;\r\n      if (action.payload.error) {\r\n        state.employer = null;\r\n        state.employerError = action.payload.error;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default employerReducer.reducer;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n  ? process.env.REACT_APP_API_URL\r\n  : \"\";\r\n\r\nexport const getProjectData = createAsyncThunk(\r\n  \"getProjectData\",\r\n  async (req, body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `${API_URL}/api/project/details/${req.token}`,\r\n        body,\r\n        config\r\n      );\r\n      if (!data.error) {\r\n        return await data;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateProjectReducer = createAsyncThunk(\r\n  \"updateProject\",\r\n  async (body) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API_URL}/api/project/update/`,\r\n      body,\r\n      config\r\n    );\r\n    return await data;\r\n  }\r\n);\r\n\r\nexport const createProjectReducer = createAsyncThunk(\r\n  \"createProject\",\r\n  async (body) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API_URL}/api/project/create/`,\r\n      body,\r\n      config\r\n    );\r\n    return await data;\r\n  }\r\n);\r\n\r\nexport const deleteProjectReducer = createAsyncThunk(\r\n  \"deleteProject\",\r\n  async (body) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API_URL}/api/project/delete/`,\r\n      body,\r\n      config\r\n    );\r\n    return await data;\r\n  }\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst ProjectReducer = createSlice({\r\n  name: \"ProjectReducer\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getProjectData.fulfilled]: (state, action) => {\r\n      state.ProjectLoading = false;\r\n      if (action.payload.error) {\r\n        state.ProjectError = action.payload.error;\r\n        state.ProjectSuccess = \"\";\r\n      } else {\r\n        state.Project = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [getProjectData.pending]: (state, action) => {\r\n      state.ProjectLoading = true;\r\n      state.Project = null;\r\n      state.ProjectSuccess = \"\";\r\n      state.ProjectError = \"\";\r\n    },\r\n    [getProjectData.rejected]: (state, action) => {\r\n      state.ProjectLoading = false;\r\n      if (action.payload.error) {\r\n        state.Project = null;\r\n        state.ProjectError = action.payload.error;\r\n      }\r\n    },\r\n    [updateProjectReducer.fulfilled]: (state, action) => {\r\n      state.ProjectLoading = false;\r\n      if (action.payload.error) {\r\n        state.ProjectError = action.payload.error;\r\n        state.ProjectSuccess = \"\";\r\n      } else {\r\n        state.Project = action.payload;\r\n        state.ProjectSuccess = \"Project data updated successful!!\";\r\n      }\r\n    },\r\n    [updateProjectReducer.pending]: (state, action) => {\r\n      state.ProjectLoading = true;\r\n      state.Project = null;\r\n      state.ProjectSuccess = \"\";\r\n      state.ProjectError = \"\";\r\n    },\r\n    [updateProjectReducer.rejected]: (state, action) => {\r\n      state.ProjectLoading = false;\r\n      if (action.payload.error) {\r\n        state.Project = null;\r\n        state.ProjectError = action.payload.error;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default ProjectReducer.reducer;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n  ? process.env.REACT_APP_API_URL\r\n  : \"\";\r\n\r\nconst initialState = {\r\n  skillsData: localStorage.getItem(\"skillsData\")\r\n    ? JSON.parse(localStorage.getItem(\"skillsData\"))\r\n    : {},\r\n};\r\n\r\nexport const getSkillQnA = createAsyncThunk(\r\n  \"getSkillQnA\",\r\n  async (req, body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `${API_URL}/api/skills/getQnA/${req.skillId}`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createSkillQnAData = createAsyncThunk(\r\n  \"createuserskills\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      if (body.id) {\r\n        const { data } = await axios.post(\r\n          `${API_URL}/api/skills/updateQnA`,\r\n          body,\r\n          config\r\n        );\r\n        return await data;\r\n      } else {\r\n        const { data } = await axios.post(\r\n          `${API_URL}/api/skills/createQnA`,\r\n          body,\r\n          config\r\n        );\r\n        return await data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteSkillQnAData = createAsyncThunk(\r\n  \"deleteskillqna\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${API_URL}/api/skills/deleteQnA`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getSkillInfo = createAsyncThunk(\r\n  \"getSkillInfo\",\r\n  async (req, body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `${API_URL}/api/skills/info/${req._id}`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getUserSkillsData = createAsyncThunk(\r\n  \"getuserskills\",\r\n  async (req, body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `${API_URL}/api/skills/details/${req.token}`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createUserSkillsData = createAsyncThunk(\r\n  \"createuserskills\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      if (body.id) {\r\n        const { data } = await axios.post(\r\n          `${API_URL}/api/skills/update`,\r\n          body,\r\n          config\r\n        );\r\n        return await data;\r\n      } else {\r\n        const { data } = await axios.post(\r\n          `${API_URL}/api/skills/create`,\r\n          body,\r\n          config\r\n        );\r\n        return await data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteUserSkillData = createAsyncThunk(\r\n  \"deleteuserskill\",\r\n  async (body) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${API_URL}/api/skills/delete`,\r\n        body,\r\n        config\r\n      );\r\n      return await data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const skillReducer = createSlice({\r\n  name: \"userSkills\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getUserSkillsData.fulfilled]: (state, action) => {\r\n      state.homeScreenLoading = false;\r\n      if (action.payload.error) {\r\n        state.homeScreenError = action.payload.error;\r\n        state.homeScreenSuccess = \"\";\r\n      } else {\r\n        state.userSkill = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [getUserSkillsData.pending]: (state, action) => {\r\n      state.homeScreenLoading = true;\r\n      state.userSkill = null;\r\n      state.homeScreenSuccess = \"\";\r\n      state.homeScreenError = \"\";\r\n    },\r\n    [getUserSkillsData.rejected]: (state, action) => {\r\n      state.homeScreenLoading = false;\r\n      if (action.payload.error) {\r\n        state.userSkill = null;\r\n        state.homeScreenError = action.payload.error;\r\n      }\r\n    },\r\n    [createUserSkillsData.fulfilled]: (state, action) => {\r\n      state.homeScreenLoading = false;\r\n      if (action.payload.error) {\r\n        state.homeScreenError = action.payload.error;\r\n        state.homeScreenSuccess = \"\";\r\n      } else {\r\n        state.userSkill = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [createUserSkillsData.pending]: (state, action) => {\r\n      state.homeScreenLoading = true;\r\n      state.homeScreenSuccess = \"\";\r\n      state.homeScreenError = \"\";\r\n    },\r\n    [createUserSkillsData.rejected]: (state, action) => {\r\n      state.homeScreenLoading = false;\r\n      if (action.payload.error) {\r\n        state.homeScreenError = action.payload.error;\r\n      }\r\n    },\r\n    [deleteUserSkillData.fulfilled]: (state, action) => {\r\n      state.homeScreenLoading = false;\r\n      if (action.payload.error) {\r\n        state.homeScreenError = action.payload.error;\r\n        state.homeScreenSuccess = \"\";\r\n      } else {\r\n        state.userSkill = action.payload;\r\n        state.success = \"\";\r\n      }\r\n    },\r\n    [deleteUserSkillData.pending]: (state, action) => {\r\n      state.homeScreenLoading = true;\r\n      state.homeScreenSuccess = \"\";\r\n      state.homeScreenError = \"\";\r\n    },\r\n    [deleteUserSkillData.rejected]: (state, action) => {\r\n      state.homeScreenLoading = false;\r\n      if (action.payload.error) {\r\n        state.homeScreenError = action.payload.error;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default skillReducer.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport parse from \"html-react-parser\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport FileComponent from \"./FileComponent\";\r\n\r\nconst ProfileSkillsSection = (props) => {\r\n  const navigate = useNavigate();\r\n  const [textEllipse, setTextEllipse] = useState(true);\r\n  const item = props.item;\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  const manageQnA = (skillId) => {\r\n    navigate(`/skillsQnA/${skillId}`);\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row className=\"pe-5 pe-md-0\">\r\n        {item.skillImage && (\r\n          <Col className=\"col-3 col-md-1\">\r\n            {item.skillImage ? (\r\n              <FileComponent\r\n                fileSrc={item.skillImage}\r\n                fileClass=\"mx-1 mw-100 p-1 border border-warning\"\r\n                alt={item.skillName}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Col>\r\n        )}\r\n        <Col className=\"flex-grow-1\">\r\n          <h3 className=\"t-color f-size-20\">\r\n            {item.skillName}{\" \"}\r\n            <span\r\n              className=\"cursor-pointer f-size-15 p-color\"\r\n              onClick={(e) => manageQnA(item._id)}\r\n            >\r\n              (Add&nbsp;Q&nbsp;n&nbsp;A)\r\n            </span>\r\n          </h3>\r\n          <h3 className=\"mb-1 f-size-15 f-bold t-color-e5\">\r\n            {item.skillHeading}\r\n          </h3>\r\n          <div className=\"d-none d-md-block\">\r\n            <div\r\n              className={`f-size-15 t-color-c5 ${\r\n                textEllipse ? \"text-ellipse\" : \"\"\r\n              }`}\r\n            >\r\n              {parse(`${item.skillDesc}`)}\r\n            </div>\r\n            <div className=\"text-end f-size-12 view-more-link\">\r\n              <span onClick={() => setTextEllipse(!textEllipse)}>\r\n                {textEllipse ? \"view more...\" : \"view less...\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"d-block d-md-none\">\r\n        <Col>\r\n          <div\r\n            className={`f-size-12 t-color-c5 ${\r\n              textEllipse ? \"text-ellipse\" : \"\"\r\n            }`}\r\n          >\r\n            {parse(`${item.skillDesc}`)}\r\n          </div>\r\n          <div className=\"text-end f-size-12 view-more-link\">\r\n            <span onClick={() => setTextEllipse(!textEllipse)}>\r\n              {textEllipse ? \"view more...\" : \"view less...\"}\r\n            </span>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div\r\n        className=\"edit-delete d-flex flex-column flex-md-row\"\r\n        style={{ right: \"0px\" }}\r\n      >\r\n        <FormGroup switch className=\"align-self-center\">\r\n          <Input\r\n            role=\"switch\"\r\n            type=\"switch\"\r\n            checked={item.active}\r\n            onChange={(e) => props.updateStatus(item._id, !item.active)}\r\n          />\r\n          <span className=\"d-none d-md-inline\">\r\n            {item.active ? \"Active\" : \"Inactive\"}\r\n          </span>\r\n        </FormGroup>\r\n        <FontAwesomeIcon\r\n          icon={faEdit}\r\n          onClick={(e) =>\r\n            props.editSkills(\r\n              item.skillName,\r\n              item.skillHeading,\r\n              item.skillImage,\r\n              item.skillDesc,\r\n              item._id\r\n            )\r\n          }\r\n          className=\"mt-1\"\r\n          style={{ padding: \"7px 7px\" }}\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faTrash}\r\n          onClick={(e) => props.deleteSkills(item._id)}\r\n          className=\"mt-1\"\r\n          style={{ padding: \"7px 7px\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileSkillsSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport {\r\n  createUserSkillsData,\r\n  deleteUserSkillData,\r\n  getUserSkillsData,\r\n} from \"../reducers/skillReducer\";\r\n\r\nimport ProfileSkillsSection from \"./ProfileSkillsSection\";\r\nimport AnimatedElement from \"./AnimatedElement\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Skills = (props) => {\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const displayType = props.displayType;\r\n  const [skillData, setSkillData] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const getUserSkills = async () => {\r\n    const data = await dispatch(\r\n      getUserSkillsData({ token: userdetails.token })\r\n    );\r\n    if (!data.payload.error) {\r\n      console.log(data.payload);\r\n      await setSkillData(data.payload);\r\n    } else {\r\n      await setSkillData(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.updateSkill) {\r\n      getUserSkills();\r\n    }\r\n  }, [props.updateSkill]);\r\n\r\n  const updateStatus = async (id, active) => {\r\n    const data = await dispatch(\r\n      createUserSkillsData({\r\n        id: id,\r\n        active: active,\r\n        token: userdetails.token,\r\n      })\r\n    );\r\n    if (data) {\r\n      let tempSkill = [...skillData];\r\n      await skillData.forEach((item, i) => {\r\n        if (item._id === data.payload._id) {\r\n          tempSkill[i] = data.payload;\r\n        }\r\n      });\r\n      setSkillData(tempSkill);\r\n    }\r\n  };\r\n\r\n  const editSkills = (sName, sHeading, sImage, sDesc, id) => {\r\n    props.editSkills(sName, sHeading, sImage, sDesc, id);\r\n  };\r\n\r\n  const deleteSkills = async (id) => {\r\n    const data = await dispatch(\r\n      deleteUserSkillData({ id: id, token: userdetails.token })\r\n    );\r\n    getUserSkills();\r\n  };\r\n  return (\r\n    <Row>\r\n      {skillData &&\r\n        skillData.map((item, i) =>\r\n          displayType && displayType === \"block\" ? (\r\n            item.active && (\r\n              <Col className=\"col-6 col-md-3 my-2\" key={item._id}>\r\n                <AnimatedElement>\r\n                  <div\r\n                    className=\"s-back text-center p-2\"\r\n                    onClick={(e) => navigate(`/skills/${item._id}`)}\r\n                  >\r\n                    <p className=\"f-size-15 m-0 p-0\">{item.skillName}</p>\r\n                  </div>\r\n                </AnimatedElement>\r\n              </Col>\r\n            )\r\n          ) : displayType && displayType === \"column\" ? (\r\n            item.active && (\r\n              <Col className=\"col-6 col-md-4\" key={item._id}>\r\n                <AnimatedElement>\r\n                  <div className=\"text-start p-2\">\r\n                    <p\r\n                      className=\"f-size-20 m-0 p-0 t-color cursor-pointer\"\r\n                      onClick={(e) => navigate(`/skills/${item._id}`)}\r\n                    >\r\n                      {item.skillName}\r\n                    </p>\r\n                  </div>\r\n                </AnimatedElement>\r\n              </Col>\r\n            )\r\n          ) : (\r\n            <Col\r\n              className=\"col-12 skill-item position-relative px-0 px-md-4\"\r\n              style={{ overflowX: \"hidden\" }}\r\n              key={item._id}\r\n            >\r\n              <ProfileSkillsSection\r\n                item={item}\r\n                updateStatus={updateStatus}\r\n                editSkills={editSkills}\r\n                deleteSkills={deleteSkills}\r\n              />\r\n            </Col>\r\n          )\r\n        )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\n\n/**\n * AccordionContext\n * {\n *  toggle: PropTypes.func.isRequired,\n *  openId: PropTypes.string,\n * }\n */\nexport var AccordionContext = /*#__PURE__*/React.createContext({});","var _excluded = [\"flush\", \"open\", \"toggle\", \"className\", \"cssModule\", \"tag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport { AccordionContext } from './AccordionContext';\nvar propTypes = {\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change existing className with a new className */\n  cssModule: PropTypes.object,\n  /** Render accordions edge-to-edge with their parent container */\n  flush: PropTypes.bool,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** The current active key that corresponds to the currently expanded card */\n  open: PropTypes.oneOfType([PropTypes.array, PropTypes.string]).isRequired,\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  /** Function that's triggered on clicking `AccordionHeader` */\n  toggle: PropTypes.func.isRequired\n};\nfunction Accordion(props) {\n  var flush = props.flush,\n    open = props.open,\n    toggle = props.toggle,\n    className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'accordion', {\n    'accordion-flush': flush\n  }), cssModule);\n  var accordionContext = useMemo(function () {\n    return {\n      open: open,\n      toggle: toggle\n    };\n  });\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: accordionContext\n  }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  })));\n}\nAccordion.propTypes = propTypes;\nexport default Accordion;","var _excluded = [\"className\", \"cssModule\", \"tag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  /** To add custom class */\n  className: PropTypes.string,\n  /** Change existing base class name with a new class name */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction AccordionItem(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'accordion-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nAccordionItem.propTypes = propTypes;\nexport default AccordionItem;","var _excluded = [\"className\", \"cssModule\", \"tag\", \"innerRef\", \"children\", \"targetId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport { AccordionContext } from './AccordionContext';\nvar propTypes = {\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change existing base class name with a new class name */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  /** Unique key used to control item's collapse/expand */\n  targetId: PropTypes.string.isRequired\n};\nfunction AccordionHeader(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'h2' : _props$tag,\n    innerRef = props.innerRef,\n    children = props.children,\n    targetId = props.targetId,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var _useContext = useContext(AccordionContext),\n    open = _useContext.open,\n    toggle = _useContext.toggle;\n  var classes = mapToCssModules(classNames(className, 'accordion-header'), cssModule);\n  var buttonClasses = mapToCssModules(classNames('accordion-button', {\n    collapsed: !(Array.isArray(open) ? open.includes(targetId) : open === targetId)\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: buttonClasses,\n    onClick: function onClick() {\n      return toggle(targetId);\n    }\n  }, children));\n}\nAccordionHeader.propTypes = propTypes;\nexport default AccordionHeader;","var _excluded = [\"className\", \"cssModule\", \"tag\", \"innerRef\", \"children\", \"accordionId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Collapse from './Collapse';\nimport { AccordionContext } from './AccordionContext';\nvar propTypes = {\n  /** Unique key used to control item's collapse/expand */\n  accordionId: PropTypes.string.isRequired,\n  /** To add custom class */\n  className: PropTypes.string,\n  children: PropTypes.node,\n  /** Change existing base class name with a new class name */\n  cssModule: PropTypes.object,\n  /** Pass ref to the component */\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction AccordionBody(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    innerRef = props.innerRef,\n    children = props.children,\n    accordionId = props.accordionId,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var _useContext = useContext(AccordionContext),\n    open = _useContext.open;\n  var classes = mapToCssModules(classNames(className, 'accordion-collapse'), cssModule);\n  return /*#__PURE__*/React.createElement(Collapse, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef,\n    isOpen: Array.isArray(open) ? open.includes(accordionId) : open === accordionId\n  }), /*#__PURE__*/React.createElement(Tag, {\n    className: \"accordion-body\"\n  }, children));\n}\nAccordionBody.propTypes = propTypes;\nexport default AccordionBody;","export const API_URL = process.env.REACT_APP_API_URL\r\n  ? process.env.REACT_APP_API_URL\r\n  : \"\";\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../utils/API_URl\";\r\n\r\nconst FileUploadManagement = async (props) => {\r\n  const { inputData, file, formField, formInputValues, token } = props;\r\n  let attachments = {};\r\n  const attachMent = (att = null) => {\r\n    props.cf(inputData, att);\r\n  };\r\n  const xx = await formField.map(async (item, i) => {\r\n    let itemData = item.split(\"-\");\r\n    let itemField = itemData[0];\r\n    if (itemData[1] === \"image\" || itemData[1] === \"file\") {\r\n      if (file[itemField] === null || file[itemField] === \"\") {\r\n        return null;\r\n      } else if (file[itemField] === \"No File\") {\r\n        let preFieldData = formInputValues[itemField];\r\n        if (preFieldData !== \"\" && preFieldData !== null) {\r\n          let preFileExt = preFieldData.split(\".\").splice(-1)[0];\r\n\r\n          if ([\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(preFileExt) === true) {\r\n            await axios.delete(\r\n              `${API_URL}/api/deleteFiles/uploads/${preFieldData}`\r\n            );\r\n          } else {\r\n            await axios.delete(\r\n              `${API_URL}/api/deleteFiles/uploadedFiles/${preFieldData}`\r\n            );\r\n          }\r\n        }\r\n        attachments = { ...attachments, [itemField]: null };\r\n        console.log(attachments);\r\n        //attachMent(attachments);\r\n      } else {\r\n        const formData = new FormData();\r\n        await formData.append(\"image\", file[itemField]);\r\n        if (typeof file[itemField] === \"object\") {\r\n          let formFileExt = file[itemField].name.split(\".\").splice(-1)[0];\r\n          if ([\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(formFileExt) === true) {\r\n            const res = await axios.post(`${API_URL}/api/upload/`, formData, {\r\n              headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                token,\r\n              },\r\n            });\r\n            attachments = {\r\n              ...attachments,\r\n              [itemField]: res.data.filename,\r\n            };\r\n            return attachments;\r\n          } else {\r\n            const res = await axios.post(\r\n              `${API_URL}/api/uploadDoc/`,\r\n              formData,\r\n              {\r\n                headers: {\r\n                  \"Content-Type\": \"multipart/form-data\",\r\n                  token,\r\n                },\r\n              }\r\n            );\r\n            attachments = {\r\n              ...attachments,\r\n              [itemField]: res.data.filename,\r\n            };\r\n            return attachments;\r\n          }\r\n        }\r\n\r\n        if (\r\n          inputData[itemField] !== null &&\r\n          inputData[itemField] !== \"\" &&\r\n          inputData[itemField] !== undefined &&\r\n          inputData[itemField] !== file[itemField]\r\n        ) {\r\n          let inputFileExt = inputData[itemField].split(\".\").splice(-1)[0];\r\n\r\n          if ([\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(inputFileExt) === true) {\r\n            await axios.delete(\r\n              `${API_URL}/api/deleteFiles/uploads/${inputData[itemField]}`\r\n            );\r\n          } else {\r\n            await axios.delete(\r\n              `${API_URL}/api/deleteFiles/uploadedFiles/${inputData[itemField]}`\r\n            );\r\n          }\r\n        }\r\n      }\r\n      return attachments;\r\n    }\r\n  });\r\n  Promise.all(xx)\r\n    .then((results) => {\r\n      attachMent(attachments);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error:\", error);\r\n    });\r\n};\r\n\r\nexport default FileUploadManagement;\r\n","import React, { useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../utils/API_URl\";\r\nimport FormElementComponent from \"../../shared-components/FormElementComponent\";\r\nimport FileUploadManagement from \"../../shared-components/FileUploadManagement\";\r\n\r\nconst EditHomeContent1 = (props) => {\r\n  const [pageContent1, setPageContent1] = useState(props.homeData.pageContent1);\r\n  let homeData = props.homeData;\r\n  const dispatch = useDispatch();\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  const formField = [\r\n    \"contentTitle-quill-require\",\r\n    \"contentHeading-quill-optional\",\r\n    \"contentData-quill-optional\",\r\n    \"attachment-file-optional\",\r\n  ];\r\n  const formInputValues = pageContent1;\r\n\r\n  const closeModal = () => {\r\n    props.cancelEditContent1(false);\r\n  };\r\n\r\n  const updateInputData = async (x = null, y = null) => {\r\n    if (x !== null) {\r\n      const data = await dispatch(\r\n        updateHomeReducer({\r\n          ...homeData,\r\n          pageContent1: { ...x, ...y },\r\n          token: userdetails.token,\r\n        })\r\n      );\r\n      if (data.payload) {\r\n        closeModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const createData = () => {};\r\n\r\n  const updateData = async (inputData, file) => {\r\n    FileUploadManagement({\r\n      inputData,\r\n      file,\r\n      formField,\r\n      formInputValues,\r\n      token: userdetails.token,\r\n      cf: updateInputData,\r\n    });\r\n    // let attachments = {};\r\n\r\n    // if (file !== null) {\r\n    //   const promiseArray = await formField.map(async (item, i) => {\r\n    //     let itemData = item.split(\"-\");\r\n    //     let itemField = itemData[0];\r\n    //     if (itemData[1] === \"image\" || itemData[1] === \"file\") {\r\n    //       if (file[itemField] === null) {\r\n    //         return null;\r\n    //       } else if (file[itemField] === \"No File\") {\r\n    //         let preFieldData = formInputValues[itemField];\r\n    //         if (preFieldData !== \"\" && preFieldData !== null) {\r\n    //           let preFileExt = preFieldData.split(\".\").splice(-1)[0];\r\n\r\n    //           if (\r\n    //             [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(preFileExt) === true &&\r\n    //             itemData[1] === \"image\"\r\n    //           ) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${preFieldData}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${preFieldData}`\r\n    //             );\r\n    //           }\r\n    //         }\r\n    //         attachments = { ...attachments, [itemField]: null };\r\n    //       } else {\r\n    //         const formData = new FormData();\r\n    //         await formData.append(\"image\", file[itemField]);\r\n\r\n    //         if (inputData[itemField] !== null && inputData[itemField] !== \"\") {\r\n    //           let inputFileExt = inputData[itemField].split(\".\").splice(-1)[0];\r\n\r\n    //           if (\r\n    //             [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(inputFileExt) === true &&\r\n    //             itemData[1] === \"image\"\r\n    //           ) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${inputData[itemField]}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${inputData[itemField]}`\r\n    //             );\r\n    //           }\r\n    //         }\r\n\r\n    //         let formFileExt = file[itemField].name.split(\".\").splice(-1)[0];\r\n    //         if (\r\n    //           [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(formFileExt) === true &&\r\n    //           itemData[1] === \"image\"\r\n    //         ) {\r\n    //           const res = await axios.post(`${API_URL}/api/upload/`, formData, {\r\n    //             headers: {\r\n    //               \"Content-Type\": \"multipart/form-data\",\r\n    //               token: userdetails.token,\r\n    //             },\r\n    //           });\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         } else {\r\n    //           const res = await axios.post(\r\n    //             `${API_URL}/api/uploadDoc/`,\r\n    //             formData,\r\n    //             {\r\n    //               headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //                 token: userdetails.token,\r\n    //               },\r\n    //             }\r\n    //           );\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   });\r\n    //   Promise.all(promiseArray).then(async () => {\r\n    //     await setPageContent1({\r\n    //       ...inputData,\r\n    //       ...attachments,\r\n    //     });\r\n    //     await dispatch(\r\n    //       updateHomeReducer({\r\n    //         ...homeData,\r\n    //         pageContent1: { ...inputData, ...attachments },\r\n    //         token: userdetails.token,\r\n    //       })\r\n    //     );\r\n    //     await props.cancelEditContent1(false);\r\n    //   });\r\n    // } else {\r\n    //   await setPageContent1({ ...inputData });\r\n    //   await dispatch(\r\n    //     updateHomeReducer({\r\n    //       ...homeData,\r\n    //       pageContent1: { ...inputData },\r\n    //       token: userdetails.token,\r\n    //     })\r\n    //   );\r\n    //   await props.cancelEditContent1(false);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row>\r\n        <Col md={6}>Active : </Col>\r\n        <Col md={6}>\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={pageContent1.active}\r\n              disabled\r\n            />\r\n            {pageContent1.active ? \"Active\" : \"Inactive\"}\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <FormElementComponent\r\n        formField={formField}\r\n        formInputValues={formInputValues}\r\n        modalHeading={\"Update Home Top Banner\"}\r\n        buttons={[\r\n          {\r\n            type: \"cancel\",\r\n            title: \"Cancel\",\r\n          },\r\n          {\r\n            type: \"update\",\r\n            title: \"Update\",\r\n          },\r\n        ]}\r\n        closeModal={closeModal}\r\n        createData={createData}\r\n        updateData={updateData}\r\n        formType=\"modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditHomeContent1;\r\n","import React, { useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport axios from \"axios\";\r\nimport FormElementComponent from \"../../shared-components/FormElementComponent\";\r\nimport FileUploadManagement from \"../../shared-components/FileUploadManagement\";\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n  ? process.env.REACT_APP_API_URL\r\n  : \"\";\r\nconst EditHomeContent2 = (props) => {\r\n  const [pageContent2, setPageContent2] = useState(props.homeData.pageContent2);\r\n  let homeData = props.homeData;\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const { userdetails } = useSelector((state) => state.user);\r\n\r\n  const formField = [\r\n    \"contentTitle-quill-require\",\r\n    \"contentHeading-quill-optional\",\r\n    \"contentData-quill-optional\",\r\n    \"attachment-file-optional\",\r\n  ];\r\n  const formInputValues = pageContent2;\r\n\r\n  const closeModal = () => {\r\n    props.cancelEditContent2(false);\r\n  };\r\n\r\n  const updateInputData = async (x = null, y = null) => {\r\n    if (x !== null) {\r\n      const data = await dispatch(\r\n        updateHomeReducer({\r\n          ...homeData,\r\n          pageContent2: { ...x, ...y },\r\n          token: userdetails.token,\r\n        })\r\n      );\r\n      if (data.payload) {\r\n        closeModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const createData = () => {};\r\n\r\n  const updateData = async (inputData, file) => {\r\n    FileUploadManagement({\r\n      inputData,\r\n      file,\r\n      formField,\r\n      formInputValues,\r\n      token: userdetails.token,\r\n      cf: updateInputData,\r\n    });\r\n    // let attachments = {};\r\n\r\n    // if (file !== null) {\r\n    //   const promiseArray = await formField.map(async (item, i) => {\r\n    //     let itemData = item.split(\"-\");\r\n    //     let itemField = itemData[0];\r\n    //     if (itemData[1] === \"image\" || itemData[1] === \"file\") {\r\n    //       if (file[itemField] === null) {\r\n    //         return null;\r\n    //       } else if (file[itemField] === \"No File\") {\r\n    //         let preFieldData = formInputValues[itemField];\r\n    //         if (preFieldData !== \"\" && preFieldData !== null) {\r\n    //           let preFileExt = preFieldData.split(\".\").splice(-1)[0];\r\n\r\n    //           if ([\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(preFileExt) === true) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${preFieldData}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${preFieldData}`\r\n    //             );\r\n    //           }\r\n    //         }\r\n    //         attachments = { ...attachments, [itemField]: null };\r\n    //       } else {\r\n    //         const formData = new FormData();\r\n    //         await formData.append(\"image\", file[itemField]);\r\n\r\n    //         if (inputData[itemField] !== null && inputData[itemField] !== \"\") {\r\n    //           let inputFileExt = inputData[itemField].split(\".\").splice(-1)[0];\r\n\r\n    //           if (\r\n    //             [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(inputFileExt) === true\r\n    //           ) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${inputData[itemField]}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${inputData[itemField]}`\r\n    //             );\r\n    //           }\r\n    //         }\r\n\r\n    //         let formFileExt = file[itemField].name.split(\".\").splice(-1)[0];\r\n    //         if ([\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(formFileExt) === true) {\r\n    //           const res = await axios.post(`${API_URL}/api/upload/`, formData, {\r\n    //             headers: {\r\n    //               \"Content-Type\": \"multipart/form-data\",\r\n    //               token: userdetails.token,\r\n    //             },\r\n    //           });\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         } else {\r\n    //           const res = await axios.post(\r\n    //             `${API_URL}/api/uploadDoc/`,\r\n    //             formData,\r\n    //             {\r\n    //               headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //                 token: userdetails.token,\r\n    //               },\r\n    //             }\r\n    //           );\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   });\r\n    //   Promise.all(promiseArray).then(async () => {\r\n    //     await setPageContent2({\r\n    //       ...inputData,\r\n    //       ...attachments,\r\n    //     });\r\n    //     await dispatch(\r\n    //       updateHomeReducer({\r\n    //         ...homeData,\r\n    //         pageContent2: { ...inputData, ...attachments },\r\n    //         token: userdetails.token,\r\n    //       })\r\n    //     );\r\n    //     await props.cancelEditContent2(false);\r\n    //   });\r\n    // } else {\r\n    //   await setPageContent2({ ...inputData });\r\n    //   await dispatch(\r\n    //     updateHomeReducer({\r\n    //       ...homeData,\r\n    //       pageContent2: { ...inputData },\r\n    //       token: userdetails.token,\r\n    //     })\r\n    //   );\r\n    //   await props.cancelEditContent2(false);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row>\r\n        <Col md={6}>Active : </Col>\r\n        <Col md={6}>\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={pageContent2.active}\r\n              disabled\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n\r\n      <FormElementComponent\r\n        formField={formField}\r\n        formInputValues={formInputValues}\r\n        modalHeading={\"Update Home Top Banner\"}\r\n        buttons={[\r\n          {\r\n            type: \"cancel\",\r\n            title: \"Cancel\",\r\n          },\r\n          {\r\n            type: \"update\",\r\n            title: \"Update\",\r\n          },\r\n        ]}\r\n        closeModal={closeModal}\r\n        createData={createData}\r\n        updateData={updateData}\r\n        formType=\"modal\"\r\n      />\r\n\r\n      {/* <Row>\r\n        <Col md={6}>Content Title : </Col>\r\n        <Col md={6}>\r\n          <EditorToolbar toolbarId={\"contentTitle\"} />\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            defaultValue={pageContent2.contentTitle}\r\n            onChange={(e) => updateContent1Data(e, \"contentTitle\")}\r\n            placeholder={\"Write something awesome...\"}\r\n            modules={modules(\"contentTitle\")}\r\n            formats={formats}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>Content Heading : </Col>\r\n        <Col md={6}>\r\n          <EditorToolbar toolbarId={\"contentHeading\"} />\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            defaultValue={pageContent2.contentHeading}\r\n            onChange={(e) => updateContent1Data(e, \"contentHeading\")}\r\n            placeholder={\"Write something awesome...\"}\r\n            modules={modules(\"contentHeading\")}\r\n            formats={formats}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>Content Description : </Col>\r\n        <Col md={6}>\r\n          <EditorToolbar toolbarId={\"contentData\"} />\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            defaultValue={pageContent2.contentData}\r\n            onChange={(e) => updateContent1Data(e, \"contentData\")}\r\n            placeholder={\"Write something awesome...\"}\r\n            modules={modules(\"contentData\")}\r\n            formats={formats}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>Attachment : </Col>\r\n        <Col md={6}>\r\n          <Row>\r\n            {file ? (\r\n              <Col md={6}>\r\n                <div\r\n                  className=\"position-relative d-inline-block w-75\"\r\n                  style={{ overflow: \"hidden\" }}\r\n                >\r\n                  {file.name &&\r\n                  [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(\r\n                    file.name.split(\".\")[1].toLowerCase()\r\n                  ) ? (\r\n                    <img\r\n                      src={URL.createObjectURL(file)}\r\n                      alt=\"\"\r\n                      className=\"profile_pic\"\r\n                    />\r\n                  ) : (\r\n                    <p className=\"pt-3 text-truncate\">{file.name}</p>\r\n                  )}\r\n                  {file !== \"No File\" && (\r\n                    <FontAwesomeIcon\r\n                      icon={faRemove}\r\n                      onClick={handleFileRemove}\r\n                      className=\"mt-2 edit-icon\"\r\n                      style={{ padding: \"3px 7px\" }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </Col>\r\n            ) : (\r\n              <Col md={6}>\r\n                <div className=\"position-relative  d-inline-block w-75\">\r\n                  {pageContent2.attachment ? (\r\n                    <>\r\n                      {[\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(\r\n                        pageContent2.attachment.split(\".\")[1].toLowerCase()\r\n                      ) ? (\r\n                        <>\r\n                          <img\r\n                            src={`/uploads/${pageContent2.attachment}`}\r\n                            alt={pageContent2.contentHeading}\r\n                            className=\"profile_pic\"\r\n                          />\r\n                          <FontAwesomeIcon\r\n                            icon={faRemove}\r\n                            onClick={handleFileRemove}\r\n                            className=\"mt-1 edit-icon\"\r\n                            style={{ padding: \"3px 7px\" }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <a\r\n                            href={`/uploadedFiles/${pageContent2.attachment}`}\r\n                            alt={pageContent2.contentHeading}\r\n                            style={{ maxHeight: \"80px\" }}\r\n                          >\r\n                            Download Attachment\r\n                          </a>\r\n                          <FontAwesomeIcon\r\n                            icon={faRemove}\r\n                            onClick={handleFileRemove}\r\n                            className=\"mt-0 edit-icon\"\r\n                            style={{ padding: \"3px 7px\" }}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    <img\r\n                      src=\"/images/no-image-banner.jpg\"\r\n                      alt=\"No Pic Available\"\r\n                      className=\"profile_pic\"\r\n                    />\r\n                  )}\r\n                </div>\r\n              </Col>\r\n            )}\r\n            <Col md={6}>\r\n              <div className=\"position-relative\">\r\n                {file && file !== \"No File\" ? (\r\n                  <>\r\n                    <p className=\"pt-3 text-truncate\">{file.name}</p>\r\n                    <FontAwesomeIcon\r\n                      icon={faRotateBack}\r\n                      onClick={handleUndoSelection}\r\n                      className=\"mt-2 edit-icon\"\r\n                      style={{ padding: \"4px\" }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"page1content\"\r\n                    id=\"page1content\"\r\n                    onChange={handleFileChange}\r\n                    ref={fileInputRef}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <div>\r\n        <Row>\r\n          <Col className=\"text-end\">\r\n            <Button\r\n              className=\"sp-btn-secondary rounded-0 px-5 mx-2\"\r\n              onClick={cancelEditContent2}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              className=\"sp-btn-secondary rounded-0 px-5\"\r\n              onClick={updateHomeContent1}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditHomeContent2;\r\n","import React, { useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport axios from \"axios\";\r\nimport FormElementComponent from \"../../shared-components/FormElementComponent\";\r\nimport { API_URL } from \"../../utils/API_URl\";\r\nimport FileUploadManagement from \"../../shared-components/FileUploadManagement\";\r\nconst EditHomeTopBanner = (props) => {\r\n  const [bannerData, setBannerData] = useState(props.homeData.banner);\r\n  let homeData = props.homeData;\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const formField = [\r\n    \"introductionL1-quill-optional\",\r\n    \"introductionL2-quill-optional\",\r\n    \"bannerImage-image-optional\",\r\n  ];\r\n  const formInputValues = bannerData;\r\n\r\n  const closeModal = () => {\r\n    props.cancelEditTopBanner(false);\r\n  };\r\n\r\n  const updateInputData = async (x = null, y = null) => {\r\n    if (x !== null) {\r\n      await setBannerData({\r\n        ...x,\r\n        ...y,\r\n      });\r\n      const data = await dispatch(\r\n        updateHomeReducer({\r\n          ...homeData,\r\n          banner: { ...x, ...y },\r\n          token: userdetails.token,\r\n        })\r\n      );\r\n      if (data.payload) {\r\n        closeModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const createData = () => {};\r\n\r\n  const updateData = async (inputData, file) => {\r\n    FileUploadManagement({\r\n      inputData,\r\n      file,\r\n      formField,\r\n      formInputValues,\r\n      token: userdetails.token,\r\n      cf: updateInputData,\r\n    });\r\n    // let attachments = {};\r\n    // await setBannerData({ ...inputData });\r\n    // if (file !== null) {\r\n    //   const promiseArray = await formField.map(async (item, i) => {\r\n    //     let itemData = item.split(\"-\");\r\n    //     let itemField = itemData[0];\r\n    //     if (itemData[1] === \"image\" || itemData[1] === \"file\") {\r\n    //       if (file[itemField] === null) {\r\n    //         return null;\r\n    //       } else if (file[itemField] === \"No File\") {\r\n    //         let preFieldData = formInputValues[itemField];\r\n    //         if (preFieldData !== null && preFieldData !== \"\") {\r\n    //           let preFileExt = preFieldData.split(\".\").splice(-1)[0];\r\n    //           if (\r\n    //             [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(preFileExt) === true &&\r\n    //             itemData[1] === \"image\"\r\n    //           ) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${preFieldData}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${preFieldData}`\r\n    //             );\r\n    //           }\r\n    //           attachments = { ...attachments, [itemField]: null };\r\n    //         }\r\n    //       } else {\r\n    //         const formData = new FormData();\r\n    //         await formData.append(\"image\", file[itemField]);\r\n\r\n    //         if (inputData[itemField] !== null && inputData[itemField] !== \"\") {\r\n    //           let inputFileExt = inputData[itemField].split(\".\").splice(-1)[0];\r\n    //           if (\r\n    //             [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(inputFileExt) === true &&\r\n    //             itemData[1] === \"image\"\r\n    //           ) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${inputData[itemField]}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${inputData[itemField]}`\r\n    //             );\r\n    //           }\r\n    //         }\r\n\r\n    //         let formFileExt = file[itemField].name.split(\".\").splice(-1)[0];\r\n    //         if (\r\n    //           [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(formFileExt) === true &&\r\n    //           itemData[1] === \"image\"\r\n    //         ) {\r\n    //           const res = await axios.post(`${API_URL}/api/upload/`, formData, {\r\n    //             headers: {\r\n    //               \"Content-Type\": \"multipart/form-data\",\r\n    //               token: userdetails.token,\r\n    //             },\r\n    //           });\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         } else {\r\n    //           const res = await axios.post(\r\n    //             `${API_URL}/api/uploadDoc/`,\r\n    //             formData,\r\n    //             {\r\n    //               headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //                 token: userdetails.token,\r\n    //               },\r\n    //             }\r\n    //           );\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   });\r\n    //   Promise.all(promiseArray).then(async () => {\r\n    //     await setBannerData({\r\n    //       ...inputData,\r\n    //       ...attachments,\r\n    //     });\r\n    //     await dispatch(\r\n    //       updateHomeReducer({\r\n    //         ...homeData,\r\n    //         banner: { ...inputData, ...attachments },\r\n    //         token: userdetails.token,\r\n    //       })\r\n    //     );\r\n    //     await props.cancelEditTopBanner(false);\r\n    //   });\r\n    // } else {\r\n    //   await dispatch(\r\n    //     updateHomeReducer({\r\n    //       ...homeData,\r\n    //       banner: { ...inputData },\r\n    //       token: userdetails.token,\r\n    //     })\r\n    //   );\r\n    //   await props.cancelEditTopBanner(false);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row>\r\n        <Col xs={6} className=\"px-4\">\r\n          Active :{\" \"}\r\n        </Col>\r\n        <Col xs={6}>\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={bannerData.active}\r\n              disabled\r\n            />\r\n            {bannerData.active ? \"Active\" : \"Inactive\"}\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <FormElementComponent\r\n        formField={formField}\r\n        formInputValues={formInputValues}\r\n        modalHeading={\"Update Home Top Banner\"}\r\n        buttons={[\r\n          {\r\n            type: \"cancel\",\r\n            title: \"Cancel\",\r\n          },\r\n          {\r\n            type: \"update\",\r\n            title: \"Update\",\r\n          },\r\n        ]}\r\n        closeModal={closeModal}\r\n        createData={createData}\r\n        updateData={updateData}\r\n        formType=\"modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditHomeTopBanner;\r\n","import React, { useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport axios from \"axios\";\r\nimport FormElementComponent from \"../../shared-components/FormElementComponent\";\r\nimport FileUploadManagement from \"../../shared-components/FileUploadManagement\";\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n  ? process.env.REACT_APP_API_URL\r\n  : \"\";\r\n\r\nconst EditMiddleBanner = (props) => {\r\n  const [middleBanner, setMiddleBanner] = useState(props.homeData.middleBanner);\r\n  let homeData = props.homeData;\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const formField = [\"bannerText-quill-optional\", \"bannerImage-image-optional\"];\r\n  const formInputValues = middleBanner;\r\n\r\n  const closeModal = () => {\r\n    props.cancelEditMiddleBanner(false);\r\n  };\r\n\r\n  const updateInputData = async (x = null, y = null) => {\r\n    if (x !== null) {\r\n      await setMiddleBanner({\r\n        ...x,\r\n        ...y,\r\n      });\r\n      const data = await dispatch(\r\n        updateHomeReducer({\r\n          ...homeData,\r\n          middleBanner: { ...x, ...y },\r\n          token: userdetails.token,\r\n        })\r\n      );\r\n      if (data.payload) {\r\n        closeModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const createData = () => {};\r\n\r\n  const updateData = async (inputData, file) => {\r\n    FileUploadManagement({\r\n      inputData,\r\n      file,\r\n      formField,\r\n      formInputValues,\r\n      token: userdetails.token,\r\n      cf: updateInputData,\r\n    });\r\n    // let attachments = {};\r\n    // await setMiddleBanner({ ...inputData });\r\n    // if (file !== null) {\r\n    //   const promiseArray = await formField.map(async (item, i) => {\r\n    //     let itemData = item.split(\"-\");\r\n    //     let itemField = itemData[0];\r\n    //     if (itemData[1] === \"image\" || itemData[1] === \"file\") {\r\n    //       if (file[itemField] === null) {\r\n    //         return null;\r\n    //       } else if (file[itemField] === \"No File\") {\r\n    //         let preFieldData = formInputValues[itemField];\r\n    //         if (preFieldData !== null && preFieldData !== \"\") {\r\n    //           let preFileExt = preFieldData.split(\".\").splice(-1)[0];\r\n    //           if (\r\n    //             [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(preFileExt) === true &&\r\n    //             itemData[1] === \"image\"\r\n    //           ) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${preFieldData}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${preFieldData}`\r\n    //             );\r\n    //           }\r\n    //           attachments = { ...attachments, [itemField]: null };\r\n    //         }\r\n    //       } else {\r\n    //         const formData = new FormData();\r\n    //         await formData.append(\"image\", file[itemField]);\r\n\r\n    //         if (inputData[itemField] !== null && inputData[itemField] !== \"\") {\r\n    //           let inputFileExt = inputData[itemField].split(\".\").splice(-1)[0];\r\n    //           if (\r\n    //             [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(inputFileExt) === true &&\r\n    //             itemData[1] === \"image\"\r\n    //           ) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${inputData[itemField]}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${inputData[itemField]}`\r\n    //             );\r\n    //           }\r\n    //         }\r\n\r\n    //         let formFileExt = file[itemField].name.split(\".\").splice(-1)[0];\r\n    //         if (\r\n    //           [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(formFileExt) === true &&\r\n    //           itemData[1] === \"image\"\r\n    //         ) {\r\n    //           const res = await axios.post(`${API_URL}/api/upload/`, formData, {\r\n    //             headers: {\r\n    //               \"Content-Type\": \"multipart/form-data\",\r\n    //               token: userdetails.token,\r\n    //             },\r\n    //           });\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         } else {\r\n    //           const res = await axios.post(\r\n    //             `${API_URL}/api/uploadDoc/`,\r\n    //             formData,\r\n    //             {\r\n    //               headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //                 token: userdetails.token,\r\n    //               },\r\n    //             }\r\n    //           );\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   });\r\n    //   Promise.all(promiseArray).then(async () => {\r\n    //     await setMiddleBanner({\r\n    //       ...inputData,\r\n    //       ...attachments,\r\n    //     });\r\n    //     await dispatch(\r\n    //       updateHomeReducer({\r\n    //         ...homeData,\r\n    //         middleBanner: { ...inputData, ...attachments },\r\n    //         token: userdetails.token,\r\n    //       })\r\n    //     );\r\n    //     await props.cancelEditMiddleBanner(false);\r\n    //   });\r\n    // } else {\r\n    //   await dispatch(\r\n    //     updateHomeReducer({\r\n    //       ...homeData,\r\n    //       middleBanner: { ...inputData },\r\n    //       token: userdetails.token,\r\n    //     })\r\n    //   );\r\n    //   await props.cancelEditMiddleBanner(false);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row>\r\n        <Col md={6}>Active : </Col>\r\n        <Col md={6}>\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={middleBanner.active}\r\n              disabled\r\n            />\r\n            {middleBanner.active ? \"Active\" : \"Inactive\"}\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <FormElementComponent\r\n        formField={formField}\r\n        formInputValues={formInputValues}\r\n        modalHeading={\"Update Home Top Banner\"}\r\n        buttons={[\r\n          {\r\n            type: \"cancel\",\r\n            title: \"Cancel\",\r\n          },\r\n          {\r\n            type: \"update\",\r\n            title: \"Update\",\r\n          },\r\n        ]}\r\n        closeModal={closeModal}\r\n        createData={createData}\r\n        updateData={updateData}\r\n        formType=\"modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditMiddleBanner;\r\n","import React, { useRef, useState } from \"react\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormElementComponent from \"../../shared-components/FormElementComponent\";\r\nimport FileUploadManagement from \"../../shared-components/FileUploadManagement\";\r\nimport { updateProfileReducer } from \"../../reducers/authReducer\";\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n  ? process.env.REACT_APP_API_URL\r\n  : \"\";\r\n\r\nconst EditUserProfile = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [updatedProfile, setUpdatedProfile] = useState({\r\n    ...props.userProfile,\r\n  });\r\n  const formField = [\r\n    \"pic-image-optional\",\r\n    \"name-text-optional\",\r\n    \"mobile-text-optional\",\r\n    \"mobile2-text-optional\",\r\n    \"dob-text-optional\",\r\n    \"language-text-optional\",\r\n    \"strength-text-optional\",\r\n    \"skypeId-text-optional\",\r\n    \"permanentAddress-quill-optional\",\r\n    \"careerObjective-quill-optional\",\r\n    \"careerSummary-quill-optional\",\r\n    \"personalQualities-quill-optional\",\r\n  ];\r\n  const formInputValues = updatedProfile;\r\n\r\n  const closeModal = () => {\r\n    props.cancelEditProfile(false);\r\n  };\r\n\r\n  const updateInputData = async (x = null, y = null) => {\r\n    if (x !== null) {\r\n      const data = await dispatch(\r\n        updateProfileReducer({\r\n          ...x,\r\n          ...y,\r\n          token: userdetails.token,\r\n        })\r\n      );\r\n      if (data.payload) {\r\n        closeModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const createData = () => {};\r\n\r\n  const updateData = async (inputData, file) => {\r\n    FileUploadManagement({\r\n      inputData,\r\n      file,\r\n      formField,\r\n      formInputValues,\r\n      token: userdetails.token,\r\n      cf: updateInputData,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormElementComponent\r\n        formField={formField}\r\n        formInputValues={formInputValues}\r\n        modalHeading={\"Update Home Top Banner\"}\r\n        buttons={[\r\n          {\r\n            type: \"cancel\",\r\n            title: \"Cancel\",\r\n          },\r\n          {\r\n            type: \"update\",\r\n            title: \"Update\",\r\n          },\r\n        ]}\r\n        closeModal={closeModal}\r\n        createData={createData}\r\n        updateData={updateData}\r\n        formType=\"modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUserProfile;\r\n","import React, { useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport parse from \"html-react-parser\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport FileComponent from \"../../shared-components/FileComponent\";\r\n\r\nconst HomeContent1 = (props) => {\r\n  const homeData = props.homeData;\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [pageContent1, setPageContent1] = useState(homeData.pageContent1);\r\n  const dispatch = useDispatch();\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  const updateStatus = async () => {\r\n    await dispatch(\r\n      updateHomeReducer({\r\n        ...homeData,\r\n        pageContent1: { ...pageContent1, active: !pageContent1.active },\r\n        token: userdetails.token,\r\n      })\r\n    );\r\n    props.updateData({\r\n      ...homeData,\r\n      pageContent1: { ...pageContent1, active: !pageContent1.active },\r\n    });\r\n    setPageContent1({ ...pageContent1, active: !pageContent1.active });\r\n  };\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row>\r\n        <Col sx={6}>Status</Col>\r\n        <Col sx={6}>\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={pageContent1.active}\r\n              onChange={updateStatus}\r\n            />\r\n            {pageContent1.active ? \"Active\" : \"Inactive\"}\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Content Title</Col>\r\n        <Col sx={6}>{parse(`${pageContent1.contentTitle}`)}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Content Heading</Col>\r\n        <Col sx={6}>{parse(`${pageContent1.contentHeading}`)}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Description</Col>\r\n        <Col sx={6}>{parse(`${pageContent1.contentData}`)}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Attachment</Col>\r\n        <Col sx={6}>\r\n          {pageContent1.attachment ? (\r\n            <FileComponent\r\n              fileSrc={pageContent1.attachment}\r\n              alt={pageContent1.contentHeading}\r\n              fileStyle={{ maxHeight: \"80px\" }}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeContent1;\r\n","import React, { useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport parse from \"html-react-parser\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport FileComponent from \"../../shared-components/FileComponent\";\r\n\r\nconst HomeContent2 = (props) => {\r\n  const homeData = props.homeData;\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [pageContent2, setPageContent2] = useState(homeData.pageContent2);\r\n  const dispatch = useDispatch();\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  const updateStatus = async () => {\r\n    await dispatch(\r\n      updateHomeReducer({\r\n        ...homeData,\r\n        pageContent2: { ...pageContent2, active: !pageContent2.active },\r\n        token: userdetails.token,\r\n      })\r\n    );\r\n    props.updateData({\r\n      ...homeData,\r\n      pageContent2: { ...pageContent2, active: !pageContent2.active },\r\n    });\r\n    setPageContent2({ ...pageContent2, active: !pageContent2.active });\r\n  };\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row>\r\n        <Col sx={6}>Status</Col>\r\n        <Col sx={6}>\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={pageContent2.active}\r\n              onChange={updateStatus}\r\n            />\r\n            {pageContent2.active ? \"Active\" : \"Inactive\"}\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Content Title</Col>\r\n        <Col sx={6}>{parse(`${pageContent2.contentTitle}`)}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Content Heading</Col>\r\n        <Col sx={6}>{parse(`${pageContent2.contentHeading}`)}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Description</Col>\r\n        <Col sx={6}>{parse(`${pageContent2.contentData}`)}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Attachment</Col>\r\n        <Col sx={6}>\r\n          {pageContent2.attachment ? (\r\n            <FileComponent\r\n              fileSrc={pageContent2.attachment}\r\n              alt={pageContent2.contentHeading}\r\n              fileStyle={{ maxHeight: \"80px\" }}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeContent2;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport parse from \"html-react-parser\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport FileComponent from \"../../shared-components/FileComponent\";\r\n\r\nconst HomeTopBanner = (props) => {\r\n  const homeData = props.homeData;\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [banner, setBanner] = useState(props.homeData.banner);\r\n  const dispatch = useDispatch();\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  const updateStatus = async () => {\r\n    await dispatch(\r\n      updateHomeReducer({\r\n        ...homeData,\r\n        banner: { ...banner, active: !banner.active },\r\n        token: userdetails.token,\r\n      })\r\n    );\r\n\r\n    props.updateData({\r\n      ...homeData,\r\n      banner: { ...banner, active: !banner.active },\r\n    });\r\n    setBanner({ ...banner, active: !banner.active });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setBanner(props.homeData.banner);\r\n  }, [props.homeData.banner]);\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row>\r\n        <Col md={6}>Status : </Col>\r\n        <Col md={6}>\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={banner.active}\r\n              onChange={updateStatus}\r\n            />\r\n            {banner.active ? \"Active\" : \"Inactive\"}\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>Banner Image : </Col>\r\n        <Col md={6}>\r\n          {banner.bannerImage ? (\r\n            <FileComponent\r\n              fileSrc={banner.bannerImage}\r\n              alt=\"Code Folio\"\r\n              fileStyle={{ maxHeight: \"80px\" }}\r\n            ></FileComponent>\r\n          ) : (\r\n            <img\r\n              src={`/images/no-image-banner.jpg`}\r\n              alt=\"UI/UX Design\"\r\n              style={{ maxHeight: \"80px\" }}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>Banner Intro Line 1 : </Col>\r\n        <Col md={6}>{parse(`${banner.introductionL1}`)}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>Banner Intro Line 2 : </Col>\r\n        <Col md={6}>{parse(`${banner.introductionL2}`)}</Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeTopBanner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport parse from \"html-react-parser\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport FileComponent from \"../../shared-components/FileComponent\";\r\n\r\nconst MiddleBanner = (props) => {\r\n  const homeData = props.homeData;\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [middleBanner, setMiddleBanner] = useState(props.homeData.middleBanner);\r\n  const dispatch = useDispatch();\r\n\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  const updateStatus = async () => {\r\n    await dispatch(\r\n      updateHomeReducer({\r\n        ...homeData,\r\n        middleBanner: { ...middleBanner, active: !middleBanner.active },\r\n        token: userdetails.token,\r\n      })\r\n    );\r\n\r\n    props.updateData({\r\n      ...homeData,\r\n      middleBanner: { ...middleBanner, active: !middleBanner.active },\r\n    });\r\n    setMiddleBanner({ ...middleBanner, active: !middleBanner.active });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMiddleBanner(props.homeData.middleBanner);\r\n  }, [props]);\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row>\r\n        <Col sx={6}>Status</Col>\r\n        <Col sx={6}>\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={middleBanner.active}\r\n              onChange={updateStatus}\r\n            />\r\n            {middleBanner.active ? \"Active\" : \"Inactive\"}\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Banner Content</Col>\r\n        <Col sx={6}>{parse(`${middleBanner.bannerText}`)}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sx={6}>Banner Image</Col>\r\n        <Col sx={6}>\r\n          {middleBanner.bannerImage ? (\r\n            <FileComponent\r\n              fileSrc={middleBanner.bannerImage}\r\n              alt={middleBanner.bannerText}\r\n              fileStyle={{ maxHeight: \"80px\" }}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiddleBanner;\r\n","import parse from \"html-react-parser\";\r\nimport React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport FileComponent from \"../../shared-components/FileComponent\";\r\n\r\nconst UserProfile = ({ userProfile }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          {userProfile.pic ? (\r\n            <FileComponent\r\n              fileSrc={userProfile.pic}\r\n              fileStyle={{}}\r\n              fileClass=\"profile_pic\"\r\n              alt={userProfile.name}\r\n            />\r\n          ) : (\r\n            <img\r\n              src=\"/images/user-avatar.jpg\"\r\n              alt={userProfile.name}\r\n              className=\"profile_pic\"\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"p-color\">\r\n        <Col className=\"col-4 col-md-2\">Name :</Col>\r\n        <Col className=\"col-8 col-md-4 t-color\">{userProfile.name}</Col>\r\n        <Col className=\"col-4 col-md-2\">Email Id : </Col>\r\n        <Col className=\"col-8 col-md-4 t-color\">{userProfile.email}</Col>\r\n        <Col className=\"col-4 col-md-2\">Mobile : </Col>\r\n        <Col className=\"col-8 col-md-4 t-color\">\r\n          {userProfile.mobile} , {userProfile.mobile2}\r\n        </Col>\r\n        <Col className=\"col-4 col-md-2\">D.O.B : </Col>\r\n        <Col className=\"col-8 col-md-4 t-color\">{userProfile.dob}</Col>\r\n        <Col className=\"col-4 col-md-2\">Language : </Col>\r\n        <Col className=\"col-8 col-md-4 t-color\">{userProfile.language}</Col>\r\n        <Col className=\"col-4 col-md-2\">Strength : </Col>\r\n        <Col className=\"col-8 col-md-4 t-color\">{userProfile.strength}</Col>\r\n        <Col className=\"col-4 col-md-2\">Skype Id : </Col>\r\n        <Col className=\"col-8 col-md-4 t-color\">{userProfile.skypeId}</Col>\r\n        <Col className=\"col-4 col-md-2\">Permanent Address : </Col>\r\n        <Col className=\"col-8 col-md-4 t-color\">\r\n          {userProfile.permanentAddress\r\n            ? parse(`${userProfile.permanentAddress}`)\r\n            : \"N/A\"}\r\n        </Col>\r\n        <Col className=\"col-12 col-md-2\">Career Objectives : </Col>\r\n        <Col className=\"col-12 col-md-10 t-color\">\r\n          {userProfile.careerObjective\r\n            ? parse(`${userProfile.careerObjective}`)\r\n            : \"N/A\"}\r\n        </Col>\r\n        <Col className=\"col-12 col-md-2\">Career Summary : </Col>\r\n        <Col className=\"col-12 col-md-10 t-color\">\r\n          {userProfile.careerSummary\r\n            ? parse(`${userProfile.careerSummary}`)\r\n            : \"N/A\"}\r\n        </Col>\r\n        <Col className=\"col-12 col-md-2\">Personal Qualities : </Col>\r\n        <Col className=\"col-12 col-md-10 t-color\">\r\n          {userProfile.personalQualities\r\n            ? parse(`${userProfile.personalQualities}`)\r\n            : \"N/A\"}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport { ErrorAlert, SuccessAlert } from \"../../shared-components/AlertBox\";\r\nimport Services from \"../../shared-components/Services\";\r\nimport FormElementComponent from \"../../shared-components/FormElementComponent\";\r\nimport { createUserServicesData } from \"../../reducers/serviceReducer\";\r\nimport FileUploadManagement from \"../../shared-components/FileUploadManagement\";\r\n\r\nconst ProfileService = (props) => {\r\n  const { homeData } = props;\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [services, setServices] = useState(homeData.services);\r\n  const [addServiceModal, setAddServiceModal] = useState(false);\r\n  const [updateService, setUpdateService] = useState(true);\r\n  const { error, success } = {};\r\n  const formField = [\r\n    \"serviceName-text-require\",\r\n    \"serviceHeading-text-optional\",\r\n    \"serviceImage-image-optional\",\r\n    \"serviceDesc-quill-optional\",\r\n  ];\r\n  const [formInputValues, setFormInputValues] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const updateStatus = async () => {\r\n    await dispatch(\r\n      updateHomeReducer({\r\n        ...homeData,\r\n        services: { ...services, active: !services.active },\r\n        token: userdetails.token,\r\n      })\r\n    );\r\n    props.updateData({\r\n      ...homeData,\r\n      services: { ...services, active: !services.active },\r\n    });\r\n    setServices({ ...services, active: !services.active });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setAddServiceModal(false);\r\n    setUpdateService(true);\r\n    setFormInputValues({});\r\n  };\r\n  const openModal = () => {\r\n    setAddServiceModal(true);\r\n    setUpdateService(false);\r\n  };\r\n\r\n  const updateInputData = async (x = null, y = null) => {\r\n    if (x !== null) {\r\n      console.log(\"create service data\");\r\n      const data = await dispatch(\r\n        createUserServicesData({\r\n          ...x,\r\n          ...y,\r\n          token: userdetails.token,\r\n          id: formInputValues.id ? formInputValues.id : null,\r\n        })\r\n      );\r\n      if (data.payload) {\r\n        closeModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const createData = (inputData, file) => {\r\n    FileUploadManagement({\r\n      inputData,\r\n      file,\r\n      formField,\r\n      formInputValues,\r\n      token: userdetails.token,\r\n      cf: updateInputData,\r\n    });\r\n  };\r\n\r\n  const updateData = (inputData, file) => {\r\n    FileUploadManagement({\r\n      inputData,\r\n      file,\r\n      formField,\r\n      formInputValues,\r\n      token: userdetails.token,\r\n      cf: updateInputData,\r\n    });\r\n  };\r\n\r\n  const editServices = async (sName, sHeading, sImage, sDesc, id) => {\r\n    await setFormInputValues({\r\n      ...formInputValues,\r\n      serviceName: sName,\r\n      serviceHeading: sHeading,\r\n      serviceImage: sImage,\r\n      serviceDesc: sDesc,\r\n      id,\r\n    });\r\n    setAddServiceModal(true);\r\n    setUpdateService(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-6 col-md-3 order-2 order-md-1\">Status :</Col>\r\n        <Col className=\"col-6 col-md-3 order-2 order-md-1\">\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={services.active}\r\n              onChange={updateStatus}\r\n            />\r\n            {services.active ? \"Active\" : \"Inactive\"}\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className=\"text-end col-12 col-md-6 order-1 order-md-2 pb-3 pb-md-0\">\r\n          <Button\r\n            className=\"sp-btn-secondary rounded-0 px-5\"\r\n            onClick={openModal}\r\n          >\r\n            Add New Service\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {addServiceModal && (\r\n        <FormElementComponent\r\n          formField={formField}\r\n          formInputValues={formInputValues}\r\n          modalHeading={\r\n            formInputValues.id ? \"Update Service\" : \"Add New Service\"\r\n          }\r\n          buttons={[\r\n            {\r\n              type: \"cancel\",\r\n              title: \"Cancel\",\r\n            },\r\n            {\r\n              type: formInputValues.id ? \"update\" : \"create\",\r\n              title: formInputValues.id ? \"Update Service\" : \"Add New Service\",\r\n            },\r\n          ]}\r\n          closeModal={closeModal}\r\n          createData={createData}\r\n          updateData={updateData}\r\n          formType=\"modal\"\r\n        />\r\n      )}\r\n      <Services\r\n        displayType=\"list\"\r\n        updateService={updateService}\r\n        editServices={editServices}\r\n      />\r\n      {error && <ErrorAlert message={error} />}\r\n      {success && <SuccessAlert message={success} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileService;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, FormGroup, Input, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateHomeReducer } from \"../../reducers/homeReducer\";\r\nimport { ErrorAlert, SuccessAlert } from \"../../shared-components/AlertBox\";\r\nimport Skills from \"../../shared-components/Skills\";\r\nimport FormElementComponent from \"../../shared-components/FormElementComponent\";\r\nimport { createUserSkillsData } from \"../../reducers/skillReducer\";\r\nimport FileUploadManagement from \"../../shared-components/FileUploadManagement\";\r\n\r\nconst ProfileSkills = (props) => {\r\n  const { homeData } = props;\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [skills, setSkills] = useState(homeData.skills);\r\n  const [addSkillsModal, setAddSkillsModal] = useState(false);\r\n  const [updateSkill, setUpdateSkill] = useState(true);\r\n  const { error, success } = {};\r\n  const formField = [\r\n    \"skillName-text-require\",\r\n    \"skillHeading-text-optional\",\r\n    \"skillImage-image-optional\",\r\n    \"skillDesc-quill-optional\",\r\n  ];\r\n  const [formInputValues, setFormInputValues] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const updateHomeViewStatus = async () => {\r\n    await dispatch(\r\n      updateHomeReducer({\r\n        ...homeData,\r\n        skills: { ...skills, active: !skills.active },\r\n        token: userdetails.token,\r\n      })\r\n    );\r\n    props.updateData({\r\n      ...homeData,\r\n      skills: { ...skills, active: !skills.active },\r\n    });\r\n    setSkills({ ...skills, active: !skills.active });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setAddSkillsModal(false);\r\n    setUpdateSkill(true);\r\n    setFormInputValues({});\r\n  };\r\n  const openModal = () => {\r\n    setAddSkillsModal(true);\r\n    setUpdateSkill(false);\r\n  };\r\n\r\n  const updateInputData = async (x = null, y = null) => {\r\n    if (x !== null) {\r\n      const data = await dispatch(\r\n        createUserSkillsData({\r\n          ...x,\r\n          ...y,\r\n          token: userdetails.token,\r\n          id: formInputValues.id ? formInputValues.id : null,\r\n        })\r\n      );\r\n      if (data.payload) {\r\n        closeModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const createData = (inputData, file) => {\r\n    FileUploadManagement({\r\n      inputData,\r\n      file,\r\n      formField,\r\n      formInputValues,\r\n      token: userdetails.token,\r\n      cf: updateInputData,\r\n    });\r\n  };\r\n\r\n  const updateData = async (inputData, file) => {\r\n    FileUploadManagement({\r\n      inputData,\r\n      file,\r\n      formField,\r\n      formInputValues,\r\n      token: userdetails.token,\r\n      cf: updateInputData,\r\n    });\r\n    // let attachments = {};\r\n    // if (file !== null) {\r\n    //   const promiseArray = await formField.map(async (item, i) => {\r\n    //     let itemData = item.split(\"-\");\r\n    //     let itemField = itemData[0];\r\n    //     if (itemData[1] === \"image\" || itemData[1] === \"file\") {\r\n    //       if (file[itemField] === null) {\r\n    //         return null;\r\n    //       } else if (file[itemField] === \"No File\") {\r\n    //         let preFieldData = formInputValues[itemField];\r\n    //         if (preFieldData !== \"\" && preFieldData !== null) {\r\n    //           let preFileExt = preFieldData.split(\".\").splice(-1)[0];\r\n\r\n    //           if ([\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(preFileExt) === true) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${preFieldData}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${preFieldData}`\r\n    //             );\r\n    //           }\r\n    //         }\r\n    //         attachments = { ...attachments, [itemField]: null };\r\n    //       } else {\r\n    //         const formData = new FormData();\r\n    //         await formData.append(\"image\", file[itemField]);\r\n\r\n    //         if (\r\n    //           inputData[itemField] !== null &&\r\n    //           inputData[itemField] !== \"\" &&\r\n    //           inputData[itemField] !== undefined\r\n    //         ) {\r\n    //           let inputFileExt = inputData[itemField].split(\".\").splice(-1)[0];\r\n\r\n    //           if (\r\n    //             [\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(inputFileExt) === true\r\n    //           ) {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploads/${inputData[itemField]}`\r\n    //             );\r\n    //           } else {\r\n    //             await axios.delete(\r\n    //               `${API_URL}/api/deleteFiles/uploadedFiles/${inputData[itemField]}`\r\n    //             );\r\n    //           }\r\n    //         }\r\n\r\n    //         let formFileExt = file[itemField].name.split(\".\").splice(-1)[0];\r\n    //         if ([\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(formFileExt) === true) {\r\n    //           const res = await axios.post(`${API_URL}/api/upload/`, formData, {\r\n    //             headers: {\r\n    //               \"Content-Type\": \"multipart/form-data\",\r\n    //               token: userdetails.token,\r\n    //             },\r\n    //           });\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         } else {\r\n    //           const res = await axios.post(\r\n    //             `${API_URL}/api/uploadDoc/`,\r\n    //             formData,\r\n    //             {\r\n    //               headers: {\r\n    //                 \"Content-Type\": \"multipart/form-data\",\r\n    //                 token: userdetails.token,\r\n    //               },\r\n    //             }\r\n    //           );\r\n    //           attachments = { ...attachments, [itemField]: res.data.filename };\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   });\r\n    //   Promise.all(promiseArray).then(async () => {\r\n    //     await dispatch(\r\n    //       createUserSkillsData({\r\n    //         ...inputData,\r\n    //         ...attachments,\r\n    //         token: userdetails.token,\r\n    //         id: formInputValues.id ? formInputValues.id : null,\r\n    //       })\r\n    //     );\r\n    //     closeModal();\r\n    //   });\r\n    // } else {\r\n    //   await setSkills({ ...inputData });\r\n    //   await dispatch(\r\n    //     createUserSkillsData({\r\n    //       ...inputData,\r\n    //       token: userdetails.token,\r\n    //       id: formInputValues.id ? formInputValues.id : null,\r\n    //     })\r\n    //   );\r\n    //   closeModal();\r\n    // }\r\n  };\r\n\r\n  const editSkills = async (sName, sHeading, sImage, sDesc, id) => {\r\n    await setFormInputValues({\r\n      ...formInputValues,\r\n      skillName: sName,\r\n      skillHeading: sHeading,\r\n      skillImage: sImage,\r\n      skillDesc: sDesc,\r\n      id,\r\n    });\r\n    setAddSkillsModal(true);\r\n    setUpdateSkill(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-6 col-md-3 order-2 order-md-1 px-4\">Active : </Col>\r\n        <Col className=\"col-6 col-md-3 order-2 order-md-1\">\r\n          <FormGroup switch>\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={skills.active}\r\n              onChange={updateHomeViewStatus}\r\n            />\r\n            {skills.active ? \"Active\" : \"Inactive\"}\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className=\"text-end col-12 col-md-6 order-1 order-md-2\">\r\n          <Button\r\n            className=\"sp-btn-secondary rounded-0 px-5 mb-4 mb-md-0\"\r\n            onClick={openModal}\r\n          >\r\n            Add New Skill\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {addSkillsModal && (\r\n        <FormElementComponent\r\n          formField={formField}\r\n          formInputValues={formInputValues}\r\n          modalHeading={formInputValues.id ? \"Update Skills\" : \"Add New Skill\"}\r\n          buttons={[\r\n            {\r\n              type: \"cancel\",\r\n              title: \"Cancel\",\r\n            },\r\n            {\r\n              type: formInputValues.id ? \"update\" : \"create\",\r\n              title: formInputValues.id ? \"Update Skill\" : \"Add New Skill\",\r\n            },\r\n          ]}\r\n          closeModal={closeModal}\r\n          createData={createData}\r\n          updateData={updateData}\r\n          formType=\"modal\"\r\n        />\r\n      )}\r\n      <Skills\r\n        displayType=\"list\"\r\n        updateSkill={updateSkill}\r\n        editSkills={editSkills}\r\n      />\r\n      {error && <ErrorAlert message={error} />}\r\n      {success && <SuccessAlert message={success} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileSkills;\r\n","import React from \"react\";\r\n// import {\r\n//   Button,\r\n//   Col,\r\n//   Form,\r\n//   FormGroup,\r\n//   Input,\r\n//   Label,\r\n//   Modal,\r\n//   ModalBody,\r\n//   ModalHeader,\r\n//   Row,\r\n// } from \"reactstrap\";\r\n// import { LoaderSM } from \"./loader\";\r\nimport {\r\n  createEmployerReducer,\r\n  updateEmployerReducer,\r\n} from \"../reducers/employerReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormElementComponent from \"./FormElementComponent\";\r\n\r\nconst AddEmployerComponentModal = (props) => {\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const formField = props.formField;\r\n  const formInputValues = props.formInputValues;\r\n\r\n  const closeModal = () => {\r\n    props.setAddEmployerModal(false);\r\n  };\r\n  const createData = async (inputData) => {\r\n    const data = await dispatch(\r\n      createEmployerReducer({\r\n        ...inputData,\r\n        token: userdetails.token,\r\n        id: formInputValues._id ? formInputValues._id : null,\r\n      })\r\n    );\r\n    if (data.payload) {\r\n      props.setAddEmployerModal(data, \"created\");\r\n    }\r\n  };\r\n  const updateData = async (inputData) => {\r\n    const data = await dispatch(\r\n      updateEmployerReducer({\r\n        ...inputData,\r\n        token: userdetails.token,\r\n        id: formInputValues._id ? formInputValues._id : null,\r\n      })\r\n    );\r\n    if (data.payload) {\r\n      props.setAddEmployerModal(data, \"updated\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <Row>\r\n    //   <Col>\r\n    //     <Modal\r\n    //       isOpen={addEmployerModal}\r\n    //       style={{ pointerEvents: \"none\" }}\r\n    //       {...args}\r\n    //     >\r\n    //       <ModalHeader>\r\n    //         {formData.EmployerName ? \"Update Employer\" : \"Add New Employer\"}\r\n    //       </ModalHeader>\r\n    //       <ModalBody>\r\n    //         <Form>\r\n    //           {formField.map((item, i) => {\r\n    //             var itemData = item.split(\"-\");\r\n    //             if (itemData[1] === \"text\") {\r\n    //               return (\r\n    //                 <FormGroup key={itemData[0]} className=\"px-3\">\r\n    //                   <Label\r\n    //                     className=\"text-capitalize s-color\"\r\n    //                     for={itemData[0]}\r\n    //                   >\r\n    //                     {itemData[0].split(/(?=[A-Z])/).join(\" \")}\r\n    //                   </Label>\r\n    //                   <Input\r\n    //                     type=\"text\"\r\n    //                     id={itemData[0]}\r\n    //                     placeholder={itemData[0].split(/(?=[A-Z])/).join(\" \")}\r\n    //                     required={itemData[2] === \"require\" ? true : false}\r\n    //                     defaultValue={\r\n    //                       formData[itemData[0]] ? formData[itemData[0]] : \"\"\r\n    //                     }\r\n    //                     onChange={(e) =>\r\n    //                       (formData[e.target.id] = e.target.value)\r\n    //                     }\r\n    //                   />\r\n    //                 </FormGroup>\r\n    //               );\r\n    //             }\r\n    //             if (itemData[1] === \"date\") {\r\n    //               let dt = \"\";\r\n    //               if (formData[itemData[0]]) {\r\n    //                 let date = new Date(formData[itemData[0]]);\r\n    //                 let year = date.getFullYear();\r\n    //                 let month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    //                 let day = String(date.getDate()).padStart(2, \"0\");\r\n\r\n    //                 dt = `${year}-${month}-${day}`;\r\n    //               }\r\n    //               return (\r\n    //                 <FormGroup key={itemData[0]} className=\"px-3\">\r\n    //                   <Label\r\n    //                     className=\"text-capitalize s-color\"\r\n    //                     for={itemData[0]}\r\n    //                   >\r\n    //                     {itemData[0].split(/(?=[A-Z])/).join(\" \")}\r\n    //                   </Label>\r\n    //                   <Input\r\n    //                     type=\"date\"\r\n    //                     id={itemData[0]}\r\n    //                     required={itemData[2] === \"require\" ? true : false}\r\n    //                     defaultValue={dt}\r\n    //                     placeholder={itemData[0].split(/(?=[A-Z])/).join(\" \")}\r\n    //                     onChange={(e) =>\r\n    //                       (formData[e.target.id] = e.target.value)\r\n    //                     }\r\n    //                   />\r\n    //                 </FormGroup>\r\n    //               );\r\n    //             } else {\r\n    //               return null;\r\n    //             }\r\n    //           })}\r\n\r\n    //           <div className=\"d-grid py-2\">\r\n    //             <Row className=\"px-2\">\r\n    //               <Col className=\"text-end\">\r\n    //                 <Button\r\n    //                   className=\"sp-btn-secondary rounded-0 px-5 mx-2\"\r\n    //                   onClick={(e) => props.setAddEmployerModal(false)}\r\n    //                 >\r\n    //                   Cancel\r\n    //                 </Button>\r\n    //                 <Button\r\n    //                   type=\"submit\"\r\n    //                   className=\"sp-btn-secondary rounded-0 px-5 mx-2\"\r\n    //                   onClick={submitHandler}\r\n    //                 >\r\n    //                   {formInputValues._id ? \"Update\" : \"Add Employer\"}\r\n    //                 </Button>\r\n    //               </Col>\r\n    //             </Row>\r\n    //           </div>\r\n    //         </Form>\r\n    //       </ModalBody>\r\n    //       {loading && <LoaderSM />}\r\n    //     </Modal>\r\n    //   </Col>\r\n    // </Row>\r\n    <>\r\n      <FormElementComponent\r\n        formField={formField}\r\n        formInputValues={formInputValues}\r\n        modalHeading={\r\n          formInputValues.employerName ? \"Edit Employer\" : \"Add New Employer\"\r\n        }\r\n        buttons={[\r\n          {\r\n            type: \"cancel\",\r\n            title: \"Cancel\",\r\n          },\r\n          {\r\n            type: formInputValues.employerName ? \"update\" : \"create\",\r\n            title: formInputValues.employerName\r\n              ? \"Update Employer\"\r\n              : \"Add New Employer\",\r\n          },\r\n        ]}\r\n        closeModal={closeModal}\r\n        createData={createData}\r\n        updateData={updateData}\r\n        formType=\"modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddEmployerComponentModal;\r\n","import React from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\n\r\nconst ProfileEmployerSection = (props) => {\r\n  const item = props.item;\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row key={item._id} className=\"t-color px-3 mx-0\">\r\n        <Col className=\"order-1 flex-sm-grow-1 flex-md-grow-0 col-md-3 p-color ps-0 ps-md-2\">\r\n          {item.employerName}\r\n        </Col>\r\n        <Col className=\"order-3 order-md-2 flex-md-grow-1 p-0 pe-2 col-12 col-md-7\">\r\n          {new Date(item.startDate).toLocaleDateString(\"en-US\", {\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n          })}\r\n          <span className=\"d-block d-md-inline px-2\">to</span>\r\n          {new Date(item.endDate).toLocaleDateString(\"en-US\", {\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n          })}\r\n        </Col>\r\n        <Col className=\"order-2 order-md-3 flex-sm-grow-1 flex-md-grow-0 col-2 col-md-1 p-0 clear-fix\">\r\n          <FormGroup switch className=\"float-end\">\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={item.active}\r\n              onChange={(e) => props.updateStatus(item._id, !item.active)}\r\n            />\r\n            <span className=\"d-none d-md-inline\">\r\n              {item.active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className=\"order-2 order-md-3 flex-sm-grow-1 flex-md-grow-0 p-0 col-2 col-md-1\">\r\n          <div>\r\n            <FontAwesomeIcon\r\n              icon={faEdit}\r\n              style={{ padding: \"7px 7px\" }}\r\n              onClick={(e) => props.editHandler(item)}\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faTrash}\r\n              style={{ padding: \"7px 7px\" }}\r\n              onClick={(e) => props.deleteHandler(item)}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEmployerSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Button, Col, Row } from \"reactstrap\";\r\nimport AddEmployerComponentModal from \"../../shared-components/AddEmployerComponentModal\";\r\nimport {\r\n  deleteEmployerReducer,\r\n  getEmployerData,\r\n  updateEmployerReducer,\r\n} from \"../../reducers/employerReducer\";\r\nimport ProfileEmployerSection from \"../../shared-components/ProfileEmployerSection\";\r\n\r\nconst ProfileEmployer = () => {\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const token = userdetails.token;\r\n\r\n  const [employerData, setEmployerData] = useState(null);\r\n  const [addEmployerModal, setAddEmployerModal] = useState(false);\r\n  const [updateEmployer, setUpdateEmployer] = useState(true);\r\n  const [formFieldValues, setFormFieldValues] = useState({});\r\n  const dispatch = useDispatch();\r\n  const formFieldTypes = [\r\n    \"employerName-text-require\",\r\n    \"startDate-date-optional\",\r\n    \"endDate-date-optional\",\r\n  ];\r\n  const getEmployer = async () => {\r\n    const data = await dispatch(getEmployerData({ token: token }));\r\n    if (!data.error && data.payload !== {}) {\r\n      await setEmployerData(data.payload);\r\n    } else {\r\n      await setEmployerData(null);\r\n    }\r\n  };\r\n  const closeModal = async (data, qType) => {\r\n    setAddEmployerModal(false);\r\n    setFormFieldValues({});\r\n    if (data && qType === \"updated\") {\r\n      let tempEmployer = [...employerData];\r\n      await employerData.forEach((item, i) => {\r\n        if (item._id === data.payload._id) {\r\n          tempEmployer[i] = data.payload;\r\n        }\r\n      });\r\n      setEmployerData([...tempEmployer]);\r\n    } else if (data && qType === \"created\") {\r\n      employerData\r\n        ? setEmployerData([data.payload, ...employerData])\r\n        : setEmployerData([data.payload]);\r\n    } else {\r\n      setUpdateEmployer(true);\r\n    }\r\n  };\r\n  const openModal = () => {\r\n    setAddEmployerModal(true);\r\n    setUpdateEmployer(false);\r\n  };\r\n  useEffect(() => {\r\n    getEmployer();\r\n  }, [userdetails, updateEmployer]);\r\n\r\n  const updateStatus = async (id, active) => {\r\n    const data = await dispatch(\r\n      updateEmployerReducer({\r\n        _id: id,\r\n        active: active,\r\n        token: token,\r\n      })\r\n    );\r\n    if (data) {\r\n      let tempEmployer = [...employerData];\r\n      await employerData.forEach((item, i) => {\r\n        if (item._id === data.payload._id) {\r\n          tempEmployer[i] = data.payload;\r\n        }\r\n      });\r\n      setEmployerData(tempEmployer);\r\n    }\r\n  };\r\n\r\n  const editHandler = async (item) => {\r\n    await setFormFieldValues({\r\n      ...item,\r\n    });\r\n    setAddEmployerModal(true);\r\n  };\r\n\r\n  const deleteHandler = async (item) => {\r\n    const data = await dispatch(\r\n      deleteEmployerReducer({ ...item, token: token })\r\n    );\r\n    if (data) {\r\n      let updatedData = employerData.filter(\r\n        (item, i) => item._id !== data.payload._id\r\n      );\r\n      setEmployerData(updatedData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-3\" style={{ overflowX: \"hidden\" }}>\r\n      <Row>\r\n        <Col className=\"text-end px-4\">\r\n          <Button\r\n            className=\"sp-btn-secondary rounded-0 px-5\"\r\n            onClick={openModal}\r\n          >\r\n            Add New Employer\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {addEmployerModal && (\r\n        <AddEmployerComponentModal\r\n          setAddEmployerModal={closeModal}\r\n          formField={formFieldTypes}\r\n          formInputValues={formFieldValues}\r\n        />\r\n      )}\r\n      {employerData &&\r\n        employerData.map((item, i) => (\r\n          <ProfileEmployerSection\r\n            item={item}\r\n            key={item._id}\r\n            updateStatus={updateStatus}\r\n            editHandler={editHandler}\r\n            deleteHandler={deleteHandler}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEmployer;\r\n","import React from \"react\";\r\n// import {\r\n//   Button,\r\n//   Col,\r\n//   Form,\r\n//   FormGroup,\r\n//   Input,\r\n//   Label,\r\n//   Modal,\r\n//   ModalBody,\r\n//   ModalHeader,\r\n//   Row,\r\n// } from \"reactstrap\";\r\n// import { LoaderSM } from \"./loader\";\r\nimport {\r\n  createAcademyReducer,\r\n  updateAcademyReducer,\r\n} from \"../reducers/academyReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormElementComponent from \"./FormElementComponent\";\r\n\r\nconst AddAcademyComponentModal = (props) => {\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const formField = props.formField;\r\n  const formInputValues = props.formInputValues;\r\n\r\n  const closeModal = () => {\r\n    props.setAddAcademyModal(false);\r\n  };\r\n  const createData = async (inputData) => {\r\n    const data = await dispatch(\r\n      createAcademyReducer({\r\n        ...inputData,\r\n        token: userdetails.token,\r\n        id: formInputValues._id ? formInputValues._id : null,\r\n      })\r\n    );\r\n    if (data.payload) {\r\n      props.setAddAcademyModal(data, \"created\");\r\n    }\r\n  };\r\n  const updateData = async (inputData) => {\r\n    const data = await dispatch(\r\n      updateAcademyReducer({\r\n        ...inputData,\r\n        token: userdetails.token,\r\n        id: formInputValues._id ? formInputValues._id : null,\r\n      })\r\n    );\r\n    if (data.payload) {\r\n      props.setAddAcademyModal(data, \"updated\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormElementComponent\r\n      formField={formField}\r\n      formInputValues={formInputValues}\r\n      modalHeading={\r\n        formInputValues.academyName ? \"Edit Academy\" : \"Add New Academy\"\r\n      }\r\n      buttons={[\r\n        {\r\n          type: \"cancel\",\r\n          title: \"Cancel\",\r\n        },\r\n        {\r\n          type: formInputValues.academyName ? \"update\" : \"create\",\r\n          title: formInputValues.academyName\r\n            ? \"Update Academy\"\r\n            : \"Add New Academy\",\r\n        },\r\n      ]}\r\n      closeModal={closeModal}\r\n      createData={createData}\r\n      updateData={updateData}\r\n      formType=\"modal\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddAcademyComponentModal;\r\n","import React from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\n\r\nconst ProfileAcademySection = (props) => {\r\n  const item = props.item;\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row key={item._id} className=\"t-color px-3 mx-0\">\r\n        <Col className=\"order-1 flex-sm-grow-1 flex-md-grow-0 col-md-3 p-color ps-0 ps-md-2\">\r\n          {item.academyName}\r\n        </Col>\r\n        <Col className=\"order-3 order-md-2 flex-md-grow-1 p-0 pe-2 col-12 col-md-7\">\r\n          {item.instituteName}, {item.passingYear}\r\n        </Col>\r\n        <Col className=\"order-2 order-md-3 flex-sm-grow-1 flex-md-grow-0 col-2 col-md-1 p-0 clear-fix\">\r\n          <FormGroup switch className=\"float-end\">\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={item.active}\r\n              onChange={(e) => props.updateStatus(item._id, !item.active)}\r\n            />\r\n            <span className=\"d-none d-md-inline\">\r\n              {item.active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className=\"order-2 order-md-3 flex-sm-grow-1 flex-md-grow-0 p-0 col-2 col-md-1\">\r\n          <div>\r\n            <FontAwesomeIcon\r\n              icon={faEdit}\r\n              style={{ padding: \"7px 7px\" }}\r\n              onClick={(e) => props.editHandler(item)}\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faTrash}\r\n              style={{ padding: \"7px 7px\" }}\r\n              onClick={(e) => props.deleteHandler(item)}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileAcademySection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AddAcademyComponentModal from \"../../shared-components/AddAcademyComponentModal\";\r\nimport {\r\n  deleteAcademyReducer,\r\n  getAcademyData,\r\n  updateAcademyReducer,\r\n} from \"../../reducers/academyReducer\";\r\nimport ProfileAcademySection from \"../../shared-components/ProfileAcademySection\";\r\n\r\nconst ProfileAcademia = () => {\r\n  const dispatch = useDispatch();\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [addAcademyModal, setAddAcademyModal] = useState(false);\r\n  const [updateAcademy, setUpdateAcademy] = useState(true);\r\n  const [formFieldValues, setFormFieldValues] = useState({});\r\n  const [academyData, setAcademyData] = useState(null);\r\n\r\n  const formFieldTypes = [\r\n    \"academyName-text-require\",\r\n    \"instituteName-text-optional\",\r\n    \"passingYear-text-optional\",\r\n  ];\r\n\r\n  const getAcademy = async () => {\r\n    const data = await dispatch(getAcademyData({ token: userdetails.token }));\r\n    if (!data.error && data.payload !== {}) {\r\n      await setAcademyData(data.payload);\r\n    } else {\r\n      await setAcademyData(null);\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setAddAcademyModal(true);\r\n    setUpdateAcademy(false);\r\n  };\r\n\r\n  const closeModal = async (data, qType) => {\r\n    setAddAcademyModal(false);\r\n    setFormFieldValues({});\r\n    if (data && qType === \"updated\") {\r\n      let tempAcademy = [...academyData];\r\n      await academyData.forEach((item, i) => {\r\n        if (item._id === data.payload._id) {\r\n          tempAcademy[i] = data.payload;\r\n        }\r\n      });\r\n      setAcademyData([...tempAcademy]);\r\n    } else if (data && qType === \"created\") {\r\n      academyData\r\n        ? setAcademyData([data.payload, ...academyData])\r\n        : setAcademyData([data.payload]);\r\n    } else {\r\n      setUpdateAcademy(true);\r\n    }\r\n  };\r\n\r\n  const updateStatus = async (id, active) => {\r\n    const data = await dispatch(\r\n      updateAcademyReducer({\r\n        _id: id,\r\n        active: active,\r\n        token: userdetails.token,\r\n      })\r\n    );\r\n    if (data) {\r\n      let tempAcademy = [...academyData];\r\n      await academyData.forEach((item, i) => {\r\n        if (item._id === data.payload._id) {\r\n          tempAcademy[i] = data.payload;\r\n        }\r\n      });\r\n      setAcademyData(tempAcademy);\r\n    }\r\n  };\r\n\r\n  const editHandler = async (item) => {\r\n    await setFormFieldValues({\r\n      ...item,\r\n    });\r\n    setAddAcademyModal(true);\r\n  };\r\n\r\n  const deleteHandler = async (item) => {\r\n    const data = await dispatch(\r\n      deleteAcademyReducer({ ...item, token: userdetails.token })\r\n    );\r\n    if (data) {\r\n      let updatedData = academyData.filter(\r\n        (item, i) => item._id !== data.payload._id\r\n      );\r\n      setAcademyData(updatedData);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAcademy();\r\n  }, [userdetails, updateAcademy]);\r\n\r\n  return (\r\n    <div className=\"py-3\" style={{ overflowX: \"hidden\" }}>\r\n      <Row>\r\n        <Col className=\"text-end px-4\">\r\n          <Button\r\n            className=\"sp-btn-secondary rounded-0 px-5\"\r\n            onClick={openModal}\r\n          >\r\n            Add Academy\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {addAcademyModal && (\r\n        <AddAcademyComponentModal\r\n          setAddAcademyModal={closeModal}\r\n          formField={formFieldTypes}\r\n          formInputValues={formFieldValues}\r\n        />\r\n      )}\r\n\r\n      {academyData &&\r\n        academyData.map((item, i) => (\r\n          <ProfileAcademySection\r\n            item={item}\r\n            key={item._id}\r\n            updateStatus={updateStatus}\r\n            editHandler={editHandler}\r\n            deleteHandler={deleteHandler}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileAcademia;\r\n","import React from \"react\";\r\n// import {\r\n//   Button,\r\n//   Col,\r\n//   Form,\r\n//   FormGroup,\r\n//   Input,\r\n//   Label,\r\n//   Modal,\r\n//   ModalBody,\r\n//   ModalHeader,\r\n//   Row,\r\n// } from \"reactstrap\";\r\n// import { LoaderSM } from \"./loader\";\r\nimport {\r\n  createProjectReducer,\r\n  updateProjectReducer,\r\n} from \"../reducers/projectReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormElementComponent from \"./FormElementComponent\";\r\n\r\nconst AddProjectComponentModal = (props) => {\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  // const addProjectModal = true;\r\n  const formField = props.formField;\r\n  const formInputValues = props.formInputValues;\r\n  // const [formData, setFormData] = useState({ ...formInputValues });\r\n  // const { loading } = {};\r\n  // const args = {\r\n  //   backdrop: false,\r\n  //   centered: true,\r\n  //   size: \"lg\",\r\n  //   fade: false,\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   const assignForm = async () => {\r\n  //     let preformData = await formField.reduce((obj, key, index) => {\r\n  //       obj[key.split(\"-\")[0]] = formInputValues[key.split(\"-\")[0]];\r\n  //       return obj;\r\n  //     }, {});\r\n\r\n  //     setFormData({ ...formData, ...preformData });\r\n  //   };\r\n  //   assignForm();\r\n  // }, [formInputValues]);\r\n\r\n  // const submitHandler = async (e) => {\r\n  //   e.preventDefault();\r\n  //   if (formInputValues._id) {\r\n  //     const data = await dispatch(\r\n  //       updateProjectReducer({\r\n  //         ...formData,\r\n  //         token: userdetails.token,\r\n  //         id: formInputValues._id ? formInputValues._id : null,\r\n  //       })\r\n  //     );\r\n  //     if (data.payload) {\r\n  //       props.setAddProjectModal(data, \"updated\");\r\n  //     }\r\n  //   } else {\r\n  //     const data = await dispatch(\r\n  //       createProjectReducer({\r\n  //         ...formData,\r\n  //         token: userdetails.token,\r\n  //         id: formInputValues._id ? formInputValues._id : null,\r\n  //       })\r\n  //     );\r\n  //     if (data.payload) {\r\n  //       props.setAddProjectModal(data, \"created\");\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const closeModal = () => {\r\n    props.setAddProjectModal(false);\r\n  };\r\n  const createData = async (inputData) => {\r\n    const data = await dispatch(\r\n      createProjectReducer({\r\n        ...inputData,\r\n        token: userdetails.token,\r\n        id: formInputValues._id ? formInputValues._id : null,\r\n      })\r\n    );\r\n    if (data.payload) {\r\n      props.setAddProjectModal(data, \"created\");\r\n    }\r\n  };\r\n  const updateData = async (inputData) => {\r\n    const data = await dispatch(\r\n      updateProjectReducer({\r\n        ...inputData,\r\n        token: userdetails.token,\r\n        id: formInputValues._id ? formInputValues._id : null,\r\n      })\r\n    );\r\n    if (data.payload) {\r\n      props.setAddProjectModal(data, \"updated\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <Row>\r\n    //   <Col>\r\n    //     <Modal\r\n    //       isOpen={addProjectModal}\r\n    //       style={{ pointerEvents: \"none\" }}\r\n    //       {...args}\r\n    //     >\r\n    //       <ModalHeader>\r\n    //         {formData.projectName ? \"Update Project\" : \"Add New Project\"}\r\n    //       </ModalHeader>\r\n    //       <ModalBody>\r\n    //         <Form>\r\n    //           {formField.map((item, i) => {\r\n    //             var itemData = item.split(\"-\");\r\n    //             if (itemData[1] === \"text\") {\r\n    //               return (\r\n    //                 <FormGroup key={itemData[0]} className=\"px-3\">\r\n    //                   <Label\r\n    //                     className=\"text-capitalize s-color\"\r\n    //                     for={itemData[0]}\r\n    //                   >\r\n    //                     {itemData[0].split(/(?=[A-Z])/).join(\" \")}\r\n    //                   </Label>\r\n    //                   <Input\r\n    //                     type=\"text\"\r\n    //                     id={itemData[0]}\r\n    //                     placeholder={itemData[0].split(/(?=[A-Z])/).join(\" \")}\r\n    //                     required={itemData[2] === \"require\" ? true : false}\r\n    //                     defaultValue={\r\n    //                       formData[itemData[0]] ? formData[itemData[0]] : \"\"\r\n    //                     }\r\n    //                     onChange={(e) =>\r\n    //                       (formData[e.target.id] = e.target.value)\r\n    //                     }\r\n    //                   />\r\n    //                 </FormGroup>\r\n    //               );\r\n    //             } else {\r\n    //               return null;\r\n    //             }\r\n    //           })}\r\n\r\n    //           <div className=\"d-grid py-2\">\r\n    //             <Row className=\"px-2\">\r\n    //               <Col className=\"text-end\">\r\n    //                 <Button\r\n    //                   className=\"sp-btn-secondary rounded-0 px-5 mx-2\"\r\n    //                   onClick={(e) => props.setAddProjectModal(false)}\r\n    //                 >\r\n    //                   Cancel\r\n    //                 </Button>\r\n    //                 <Button\r\n    //                   type=\"submit\"\r\n    //                   className=\"sp-btn-secondary rounded-0 px-5 mx-2\"\r\n    //                   onClick={submitHandler}\r\n    //                 >\r\n    //                   {formInputValues._id ? \"Update\" : \"Add Project\"}\r\n    //                 </Button>\r\n    //               </Col>\r\n    //             </Row>\r\n    //           </div>\r\n    //         </Form>\r\n    //       </ModalBody>\r\n    //       {loading && <LoaderSM />}\r\n    //     </Modal>\r\n    //   </Col>\r\n    // </Row>\r\n    <>\r\n      <FormElementComponent\r\n        formField={formField}\r\n        formInputValues={formInputValues}\r\n        modalHeading={\r\n          formInputValues.projectName ? \"Update Project\" : \"Add New Project\"\r\n        }\r\n        buttons={[\r\n          {\r\n            type: \"cancel\",\r\n            title: \"Cancel\",\r\n          },\r\n          {\r\n            type: formInputValues.projectName ? \"update\" : \"create\",\r\n            title: formInputValues.projectName\r\n              ? \"Update Project\"\r\n              : \"Add New Project\",\r\n          },\r\n        ]}\r\n        closeModal={closeModal}\r\n        createData={createData}\r\n        updateData={updateData}\r\n        formType=\"modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProjectComponentModal;\r\n","import React from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, FormGroup, Input, Row } from \"reactstrap\";\r\n\r\nconst ProfileProjectSection = (props) => {\r\n  const item = props.item;\r\n  const { ref, inView } = useInView({\r\n    triggerOnce: true, // Only trigger the animation once\r\n    threshold: 0.1, // Percentage of section visibility to trigger the animation\r\n  });\r\n\r\n  return (\r\n    <div ref={ref} className={inView ? \"animated-section\" : \"hidden-section\"}>\r\n      <Row key={item._id} className=\"t-color px-3 mx-0\">\r\n        <Col className=\"order-1 flex-sm-grow-1 flex-md-grow-0 col-md-3 p-color ps-0 ps-md-2\">\r\n          {item.projectName}\r\n        </Col>\r\n        <Col className=\"order-3 order-md-2 flex-md-grow-1 p-0 pe-2 col-12 col-md-7\">\r\n          <i>Responsibility:</i> {item.responsibility}\r\n          <br />\r\n          <i>Key Technologies:</i> {item.technologies}\r\n        </Col>\r\n        <Col className=\"order-2 order-md-3 flex-sm-grow-1 flex-md-grow-0 col-2 col-md-1 p-0 clear-fix\">\r\n          <FormGroup switch className=\"float-end\">\r\n            <Input\r\n              role=\"switch\"\r\n              type=\"switch\"\r\n              checked={item.active}\r\n              onChange={(e) => props.updateStatus(item._id, !item.active)}\r\n            />\r\n            <span className=\"d-none d-md-inline\">\r\n              {item.active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className=\"order-2 order-md-3 flex-sm-grow-1 flex-md-grow-0 p-0 col-2 col-md-1\">\r\n          <div>\r\n            <FontAwesomeIcon\r\n              icon={faEdit}\r\n              style={{ padding: \"7px 7px\" }}\r\n              onClick={(e) => props.editHandler(item)}\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faTrash}\r\n              style={{ padding: \"7px 7px\" }}\r\n              onClick={(e) => props.deleteHandler(item)}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileProjectSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Row } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AddProjectComponentModal from \"../../shared-components/AddProjectComponentModal\";\r\nimport {\r\n  deleteProjectReducer,\r\n  getProjectData,\r\n  updateProjectReducer,\r\n} from \"../../reducers/projectReducer\";\r\n\r\nimport ProfileProjectSection from \"../../shared-components/ProfileProjectSection\";\r\n\r\nconst ProfileProject = () => {\r\n  const dispatch = useDispatch();\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const [addProjectModal, setAddProjectModal] = useState(false);\r\n  const [updateProject, setUpdateProject] = useState(true);\r\n  const [formFieldValues, setFormFieldValues] = useState({});\r\n  const [projectData, setProjectData] = useState(null);\r\n\r\n  const formFieldTypes = [\r\n    \"projectName-text-require\",\r\n    \"responsibility-textarea-optional\",\r\n    \"technologies-textarea-optional\",\r\n  ];\r\n\r\n  const getProject = async () => {\r\n    const data = await dispatch(getProjectData({ token: userdetails.token }));\r\n    if (!data.error && data.payload !== {}) {\r\n      await setProjectData(data.payload);\r\n    } else {\r\n      await setProjectData(null);\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setAddProjectModal(true);\r\n    setUpdateProject(false);\r\n  };\r\n\r\n  const closeModal = async (data, qType) => {\r\n    setAddProjectModal(false);\r\n    setFormFieldValues({});\r\n    if (data && qType === \"updated\") {\r\n      let tempProject = [...projectData];\r\n      await projectData.forEach((item, i) => {\r\n        if (item._id === data.payload._id) {\r\n          tempProject[i] = data.payload;\r\n        }\r\n      });\r\n      setProjectData([...tempProject]);\r\n    } else if (data && qType === \"created\") {\r\n      projectData\r\n        ? setProjectData([data.payload, ...projectData])\r\n        : setProjectData([data.payload]);\r\n    } else {\r\n      setUpdateProject(true);\r\n    }\r\n  };\r\n\r\n  const updateStatus = async (id, active) => {\r\n    const data = await dispatch(\r\n      updateProjectReducer({\r\n        _id: id,\r\n        active: active,\r\n        token: userdetails.token,\r\n      })\r\n    );\r\n    if (data) {\r\n      let tempProject = [...projectData];\r\n      await projectData.forEach((item, i) => {\r\n        if (item._id === data.payload._id) {\r\n          tempProject[i] = data.payload;\r\n        }\r\n      });\r\n      setProjectData(tempProject);\r\n    }\r\n  };\r\n\r\n  const editHandler = async (item) => {\r\n    await setFormFieldValues({\r\n      ...item,\r\n    });\r\n    setAddProjectModal(true);\r\n  };\r\n\r\n  const deleteHandler = async (item) => {\r\n    const data = await dispatch(\r\n      deleteProjectReducer({ ...item, token: userdetails.token })\r\n    );\r\n    if (data) {\r\n      let updatedData = projectData.filter(\r\n        (item, i) => item._id !== data.payload._id\r\n      );\r\n      setProjectData(updatedData);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProject();\r\n  }, [userdetails, updateProject]);\r\n\r\n  return (\r\n    <div className=\"py-3\" style={{ overflowX: \"hidden\" }}>\r\n      <Row>\r\n        <Col className=\"text-end px-4\">\r\n          <Button\r\n            className=\"sp-btn-secondary rounded-0 px-5\"\r\n            onClick={openModal}\r\n          >\r\n            Add Project\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {addProjectModal && (\r\n        <AddProjectComponentModal\r\n          setAddProjectModal={closeModal}\r\n          formField={formFieldTypes}\r\n          formInputValues={formFieldValues}\r\n        />\r\n      )}\r\n\r\n      {projectData &&\r\n        projectData.map((item, i) => (\r\n          <ProfileProjectSection\r\n            item={item}\r\n            key={item._id}\r\n            updateStatus={updateStatus}\r\n            editHandler={editHandler}\r\n            deleteHandler={deleteHandler}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileProject;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLoading } from \"../../reducers/commonReducer\";\r\n\r\nconst ShowDBPopUpComponent = () => {\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n    ? process.env.REACT_APP_API_URL\r\n    : \"\";\r\n  const dispatch = useDispatch();\r\n  const [dbList, setDbList] = useState([]);\r\n  const { userdetails } = useSelector((state) => state.user);\r\n  const getDBList = async () => {\r\n    dispatch(setLoading(true));\r\n    const { data } = await axios.get(`${API_URL}/api/getDB/list`);\r\n    if (!data.error) {\r\n      setDbList(data);\r\n    } else {\r\n      setDbList([]);\r\n    }\r\n    dispatch(setLoading(false));\r\n  };\r\n  const handleExportClick = async (dbName) => {\r\n    try {\r\n      const config = { headers: { \"Content-type\": \"application/json\" } };\r\n      const response = await axios.post(\r\n        `${API_URL}/api/getDB/downloadDB`,\r\n        { token: userdetails.token, dbName },\r\n        config\r\n      );\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = \"exported_data.json\";\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error exporting data\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getDBList();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {dbList && dbList.length > 0 && userdetails.isAdmin ? (\r\n        <div className=\"container p-md-5\">\r\n          <table className=\"table table-hover table-striped table-dark\">\r\n            <tbody>\r\n              {dbList.map((item, index) => (\r\n                <tr className=\"p-color\" key={index}>\r\n                  <td>{item.name}</td>\r\n                  <td>\r\n                    <div\r\n                      className=\"btn btn-secondary btn-sm cursor-pointer float-end\"\r\n                      onClick={(e) => handleExportClick(item.name)}\r\n                    >\r\n                      Download\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        \"Show DB List\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDBPopUpComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../Base\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Accordion,\r\n  AccordionBody,\r\n  AccordionHeader,\r\n  AccordionItem,\r\n} from \"reactstrap\";\r\n\r\nimport EditHomeContent1 from \"../components/ProfileView/EditHomeContent1\";\r\nimport EditHomeContent2 from \"../components/ProfileView/EditHomeContent2\";\r\nimport EditHomeTopBanner from \"../components/ProfileView/EditHomeTopBanner\";\r\nimport EditMiddleBanner from \"../components/ProfileView/EditMiddleBanner\";\r\nimport EditUserProfile from \"../components/ProfileView/EditUserProfile\";\r\nimport HomeContent1 from \"../components/ProfileView/HomeContent1\";\r\nimport HomeContent2 from \"../components/ProfileView/HomeContent2\";\r\nimport HomeTopBanner from \"../components/ProfileView/HomeTopBanner\";\r\nimport MiddleBanner from \"../components/ProfileView/MiddleBanner\";\r\nimport UserProfile from \"../components/ProfileView/UserProfile\";\r\n\r\nimport { getHomeData } from \"../reducers/homeReducer\";\r\nimport { ErrorAlert, SuccessAlert } from \"../shared-components/AlertBox\";\r\nimport { LoaderSM } from \"../shared-components/loader\";\r\nimport ProfileService from \"../components/ProfileView/ProfileService\";\r\nimport ProfileSkills from \"../components/ProfileView/ProfileSkills\";\r\nimport ProfileEmployer from \"../components/ProfileView/ProfileEmployer\";\r\nimport ProfileAcademia from \"../components/ProfileView/ProfileAcademia\";\r\nimport ProfileProject from \"../components/ProfileView/ProfileProject\";\r\nimport AnimatedElement from \"../shared-components/AnimatedElement\";\r\nimport ShowDBPopUpComponent from \"../components/ProfileView/ShowDBPopUpComponent\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n  ? process.env.REACT_APP_API_URL\r\n  : \"\";\r\nconst Profile = () => {\r\n  const { error, loading, success, userdetails } = useSelector(\r\n    (state) => state.user\r\n  );\r\n  const { homeScreen } = useSelector((state) => state.home);\r\n\r\n  const token = userdetails.token;\r\n\r\n  const [editProfile, setEditProfile] = useState(false);\r\n  const [editHomeTopBanner, setEditHomeTopBanner] = useState(false);\r\n  const [editHomeContent1, setEditHomeContent1] = useState(false);\r\n  const [editMiddleBanner, setEditMiddleBanner] = useState(false);\r\n  const [editHomeContent2, setEditHomeContent2] = useState(false);\r\n  // const [editServices, setEditServices] = useState(false);\r\n  const [showDbPopup, setShowDbPopup] = useState(false);\r\n  const [userProfile, setUserProfile] = useState({});\r\n  const [homeData, setHomeData] = useState(homeScreen);\r\n\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(\"\");\r\n  const toggle = (id) => {\r\n    if (open === id) {\r\n      setOpen();\r\n    } else {\r\n      setOpen(id);\r\n    }\r\n  };\r\n\r\n  const getUserData = async () => {\r\n    if (token) {\r\n      const { data } = await axios.get(`${API_URL}/api/user/info/${token}`);\r\n      if (!data.error) {\r\n        await setUserProfile(data);\r\n      } else {\r\n        await setUserProfile({});\r\n      }\r\n    } else {\r\n      await setUserProfile({});\r\n    }\r\n  };\r\n\r\n  const getHomeScreenData = async () => {\r\n    const data = await dispatch(getHomeData({ token: token }));\r\n    if (!data.error) {\r\n      await setHomeData(data.payload);\r\n    } else {\r\n      await setHomeData({});\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n    getHomeScreenData();\r\n  }, [userdetails]);\r\n\r\n  const cancelEditProfile = (value) => {\r\n    setEditProfile(value);\r\n  };\r\n  const cancelEditTopBanner = async (value) => {\r\n    await getHomeScreenData();\r\n    setEditHomeTopBanner(value);\r\n  };\r\n  const cancelEditContent1 = async (value) => {\r\n    await getHomeScreenData();\r\n    setEditHomeContent1(value);\r\n  };\r\n  const cancelEditMiddleBanner = async (value) => {\r\n    await getHomeScreenData();\r\n    setEditMiddleBanner(value);\r\n  };\r\n  const cancelEditContent2 = async (value) => {\r\n    await getHomeScreenData();\r\n    setEditHomeContent2(value);\r\n  };\r\n  const updateData = (hData) => {\r\n    setHomeData({ ...hData });\r\n  };\r\n\r\n  return (\r\n    <Base>\r\n      <div className=\"container-fluid p-md-5 profile\">\r\n        {showDbPopup ? (\r\n          <>\r\n            <ShowDBPopUpComponent />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <h4 className=\"p-color\">\r\n          Personal Info:\r\n          {userdetails.isAdmin ? (\r\n            <span\r\n              className=\"float-end f-size-12 cursor-pointer\"\r\n              onClick={() => setShowDbPopup(!showDbPopup)}\r\n            >\r\n              Show Database\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </h4>\r\n        <Row>\r\n          <Col md={2}></Col>\r\n          <Col md={10}>\r\n            <AnimatedElement>\r\n              <div className=\"position-relative t-back2 p-3\">\r\n                <UserProfile userProfile={userProfile} />\r\n                <FontAwesomeIcon\r\n                  icon={faEdit}\r\n                  onClick={(e) => setEditProfile(true)}\r\n                  className=\"mt-1 edit-icon\"\r\n                  style={{ padding: \"7px 7px\" }}\r\n                />\r\n              </div>\r\n            </AnimatedElement>\r\n          </Col>\r\n        </Row>\r\n        {editProfile ? (\r\n          <EditUserProfile\r\n            userProfile={userProfile}\r\n            cancelEditProfile={cancelEditProfile}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {homeData && (\r\n          <>\r\n            <h4 className=\"p-color\">Home Page:</h4>\r\n            <Row>\r\n              <Col md={2}></Col>\r\n              <Col md={10}>\r\n                <Accordion\r\n                  className=\"p-color\"\r\n                  flush\r\n                  open={open}\r\n                  toggle={toggle}\r\n                >\r\n                  {homeData.banner && (\r\n                    <AccordionItem>\r\n                      <AccordionHeader targetId=\"1\">\r\n                        Top Banner:\r\n                      </AccordionHeader>\r\n                      <AccordionBody accordionId=\"1\">\r\n                        <div className=\"position-relative\">\r\n                          {!editHomeTopBanner ? (\r\n                            <>\r\n                              <HomeTopBanner\r\n                                homeData={homeData}\r\n                                updateData={updateData}\r\n                              />\r\n                              <FontAwesomeIcon\r\n                                icon={faEdit}\r\n                                onClick={(e) => setEditHomeTopBanner(true)}\r\n                                className=\"mt-1 edit-icon\"\r\n                                style={{ padding: \"7px 7px\" }}\r\n                              />\r\n                            </>\r\n                          ) : (\r\n                            <EditHomeTopBanner\r\n                              homeData={homeData}\r\n                              cancelEditTopBanner={cancelEditTopBanner}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </AccordionBody>\r\n                    </AccordionItem>\r\n                  )}\r\n                  {homeData.pageContent1 && (\r\n                    <AccordionItem>\r\n                      <AccordionHeader targetId=\"2\">\r\n                        Home Content 1\r\n                      </AccordionHeader>\r\n                      <AccordionBody accordionId=\"2\">\r\n                        <div className=\"position-relative\">\r\n                          {!editHomeContent1 ? (\r\n                            <>\r\n                              <HomeContent1\r\n                                homeData={homeData}\r\n                                updateData={updateData}\r\n                              />\r\n                              <FontAwesomeIcon\r\n                                icon={faEdit}\r\n                                onClick={(e) => setEditHomeContent1(true)}\r\n                                className=\"mt-1 edit-icon\"\r\n                                style={{ padding: \"7px 7px\" }}\r\n                              />\r\n                            </>\r\n                          ) : (\r\n                            <EditHomeContent1\r\n                              homeData={homeData}\r\n                              cancelEditContent1={cancelEditContent1}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </AccordionBody>\r\n                    </AccordionItem>\r\n                  )}\r\n                  {homeData && homeData.services && (\r\n                    <AccordionItem>\r\n                      <AccordionHeader targetId=\"3\">Services</AccordionHeader>\r\n                      <AccordionBody accordionId=\"3\">\r\n                        <div className=\"position-relative\">\r\n                          <ProfileService\r\n                            homeData={homeData}\r\n                            updateData={updateData}\r\n                          />\r\n                        </div>\r\n                      </AccordionBody>\r\n                    </AccordionItem>\r\n                  )}\r\n                  {homeData && homeData.middleBanner && (\r\n                    <AccordionItem>\r\n                      <AccordionHeader targetId=\"4\">\r\n                        Middle Banner\r\n                      </AccordionHeader>\r\n                      <AccordionBody accordionId=\"4\">\r\n                        <div\r\n                          className=\"position-relative\"\r\n                          style={{ overflowX: \"hidden\" }}\r\n                        >\r\n                          {!editMiddleBanner ? (\r\n                            <>\r\n                              <MiddleBanner\r\n                                homeData={homeData}\r\n                                updateData={updateData}\r\n                              />\r\n                              <FontAwesomeIcon\r\n                                icon={faEdit}\r\n                                onClick={(e) => setEditMiddleBanner(true)}\r\n                                className=\"mt-1 edit-icon\"\r\n                                style={{ padding: \"7px 7px\" }}\r\n                              />\r\n                            </>\r\n                          ) : (\r\n                            <EditMiddleBanner\r\n                              homeData={homeData}\r\n                              cancelEditMiddleBanner={cancelEditMiddleBanner}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </AccordionBody>\r\n                    </AccordionItem>\r\n                  )}\r\n                  {homeData && homeData.pageContent2 && (\r\n                    <AccordionItem>\r\n                      <AccordionHeader targetId=\"5\">\r\n                        Home Content 2\r\n                      </AccordionHeader>\r\n                      <AccordionBody accordionId=\"5\">\r\n                        <div\r\n                          className=\"position-relative\"\r\n                          style={{ overflowX: \"hidden\" }}\r\n                        >\r\n                          {!editHomeContent2 ? (\r\n                            <>\r\n                              <HomeContent2\r\n                                homeData={homeData}\r\n                                updateData={updateData}\r\n                              />\r\n                              <FontAwesomeIcon\r\n                                icon={faEdit}\r\n                                onClick={(e) => setEditHomeContent2(true)}\r\n                                className=\"mt-1 edit-icon\"\r\n                                style={{ padding: \"7px 7px\" }}\r\n                              />\r\n                            </>\r\n                          ) : (\r\n                            <EditHomeContent2\r\n                              homeData={homeData}\r\n                              cancelEditContent2={cancelEditContent2}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </AccordionBody>\r\n                    </AccordionItem>\r\n                  )}\r\n                  {homeData && homeData.skills && (\r\n                    <AccordionItem>\r\n                      <AccordionHeader targetId=\"6\">Skills</AccordionHeader>\r\n                      <AccordionBody accordionId=\"6\">\r\n                        <div className=\"position-relative\">\r\n                          <ProfileSkills\r\n                            homeData={homeData}\r\n                            updateData={updateData}\r\n                          />\r\n                        </div>\r\n                      </AccordionBody>\r\n                    </AccordionItem>\r\n                  )}\r\n                </Accordion>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n\r\n        <h4 className=\"p-color\">Employers:</h4>\r\n        <Row className=\"my-3\">\r\n          <Col className=\"col-12 col-md-2\"></Col>\r\n          <Col className=\"col-12 col-md-10\">\r\n            <div className=\"t-back2\">\r\n              <ProfileEmployer />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <h4 className=\"p-color\">Academia:</h4>\r\n        <Row className=\"my-3\">\r\n          <Col className=\"col-12 col-md-2\"></Col>\r\n          <Col className=\"col-12 col-md-10\">\r\n            <div className=\"t-back2\">\r\n              <ProfileAcademia />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <h4 className=\"p-color\">Projects:</h4>\r\n        <Row className=\"my-3\">\r\n          <Col className=\"col-12 col-md-2\"></Col>\r\n          <Col className=\"col-12 col-md-10\">\r\n            <div className=\"t-back2\">\r\n              <ProfileProject />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      {loading && <LoaderSM />}\r\n      {error && <ErrorAlert message={error} />}\r\n      {success && <SuccessAlert message={success} />}\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["API_URL","process","REACT_APP_API_URL","getEmployerData","createAsyncThunk","async","req","body","config","headers","data","axios","get","concat","token","error","console","log","updateEmployerReducer","post","createEmployerReducer","deleteEmployerReducer","createSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","employerLoading","payload","employerError","employerSuccess","employer","success","pending","rejected","getProjectData","updateProjectReducer","createProjectReducer","deleteProjectReducer","ProjectLoading","ProjectError","ProjectSuccess","Project","skillsData","localStorage","getItem","JSON","parse","getSkillQnA","skillId","createSkillQnAData","id","deleteSkillQnAData","getSkillInfo","_id","getUserSkillsData","createUserSkillsData","deleteUserSkillData","homeScreenLoading","homeScreenError","homeScreenSuccess","userSkill","props","navigate","useNavigate","textEllipse","setTextEllipse","useState","item","ref","inView","useInView","triggerOnce","threshold","_jsxs","className","children","Row","skillImage","_jsx","Col","FileComponent","fileSrc","fileClass","alt","skillName","onClick","e","manageQnA","skillHeading","skillDesc","style","right","FormGroup","switch","Input","role","type","checked","active","onChange","updateStatus","FontAwesomeIcon","icon","faEdit","editSkills","padding","faTrash","deleteSkills","userdetails","useSelector","user","displayType","skillData","setSkillData","dispatch","useDispatch","getUserSkills","useEffect","updateSkill","tempSkill","forEach","i","sName","sHeading","sImage","sDesc","map","AnimatedElement","overflowX","ProfileSkillsSection","AccordionContext","React","_excluded","_extends","Object","assign","bind","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","PropTypes","cssModule","flush","innerRef","open","isRequired","tag","tagPropType","toggle","Accordion","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","accordionContext","useMemo","Provider","value","AccordionItem","targetId","AccordionHeader","_useContext","useContext","buttonClasses","collapsed","Array","isArray","includes","accordionId","AccordionBody","Collapse","isOpen","inputData","file","formField","formInputValues","attachments","xx","itemData","split","itemField","preFieldData","preFileExt","splice","delete","formData","FormData","append","formFileExt","res","filename","undefined","inputFileExt","Promise","all","then","results","att","cf","attachMent","catch","pageContent1","setPageContent1","homeData","closeModal","cancelEditContent1","updateInputData","x","y","updateHomeReducer","md","disabled","FormElementComponent","modalHeading","buttons","title","createData","updateData","FileUploadManagement","formType","pageContent2","setPageContent2","cancelEditContent2","bannerData","setBannerData","banner","cancelEditTopBanner","xs","middleBanner","setMiddleBanner","cancelEditMiddleBanner","updatedProfile","setUpdatedProfile","userProfile","cancelEditProfile","updateProfileReducer","sx","contentTitle","contentHeading","contentData","attachment","fileStyle","maxHeight","setBanner","bannerImage","src","introductionL1","introductionL2","bannerText","_ref","_Fragment","pic","email","mobile","mobile2","dob","language","strength","skypeId","permanentAddress","careerObjective","careerSummary","personalQualities","services","setServices","addServiceModal","setAddServiceModal","updateService","setUpdateService","setFormInputValues","createUserServicesData","Button","openModal","Services","editServices","serviceName","serviceHeading","serviceImage","serviceDesc","ErrorAlert","message","SuccessAlert","skills","setSkills","addSkillsModal","setAddSkillsModal","setUpdateSkill","Skills","employerName","setAddEmployerModal","Date","startDate","toLocaleDateString","month","year","endDate","editHandler","deleteHandler","ProfileEmployer","employerData","setEmployerData","addEmployerModal","updateEmployer","setUpdateEmployer","formFieldValues","setFormFieldValues","getEmployer","tempEmployer","updatedData","filter","AddEmployerComponentModal","qType","ProfileEmployerSection","academyName","setAddAcademyModal","createAcademyReducer","updateAcademyReducer","instituteName","passingYear","ProfileAcademia","addAcademyModal","updateAcademy","setUpdateAcademy","academyData","setAcademyData","tempAcademy","deleteAcademyReducer","getAcademyData","getAcademy","AddAcademyComponentModal","ProfileAcademySection","projectName","setAddProjectModal","responsibility","technologies","ProfileProject","addProjectModal","updateProject","setUpdateProject","projectData","setProjectData","tempProject","getProject","AddProjectComponentModal","ProfileProjectSection","ShowDBPopUpComponent","dbList","setDbList","setLoading","getDBList","isAdmin","index","response","dbName","ok","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleExportClick","Profile","loading","homeScreen","home","editProfile","setEditProfile","editHomeTopBanner","setEditHomeTopBanner","editHomeContent1","setEditHomeContent1","editMiddleBanner","setEditMiddleBanner","editHomeContent2","setEditHomeContent2","showDbPopup","setShowDbPopup","setUserProfile","setHomeData","setOpen","getHomeScreenData","getHomeData","getUserData","hData","Base","UserProfile","EditUserProfile","EditHomeTopBanner","HomeTopBanner","EditHomeContent1","HomeContent1","ProfileService","EditMiddleBanner","MiddleBanner","EditHomeContent2","HomeContent2","ProfileSkills","LoaderSM"],"sourceRoot":""}